% Get actor data from /formation/import
% to make easier to grab the enemies code from this mod to future projects

#import enemy/03_Chan.bpat
#import enemy/03_Lee.bpat
#import enemy/03_TheMaster1.bpat
#import enemy/03_TheMaster2.bpat
#import enemy/03_TheMaster3.bpat

#new:Function $Function_80219900
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S0, 20 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S1, 24 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        V0, C (S0)
   30:  JAL       ~Func:get_variable
   34:  LW        A1, 0 (V0)
   38:  COPY      S1, V0
   3C:  LI        A0, 1
   40:  BEQ       S1, A0, .o100
   44:  SW        S1, 70 (S0)
   48:  SLTI      V0, S1, 2
   4C:  BEQ       V0, R0, .o64
   50:  LI        V0, 2
   54:  BEQ       S1, R0, .o7C
   58:  LI        V0, 8E
   5C:  BEQ       R0, R0, .o400
   60:  NOP
        .o64
   64:  BEQ       S1, V0, .o27C
   68:  LI        V0, 3
   6C:  BEQ       S1, V0, .oBC
   70:  LI        V1, 5B
   74:  BEQ       R0, R0, .o400
   78:  NOP
        .o7C
   7C:  LIF       F4, 142.0
   84:  LIF       F30, -118.0
   8C:  LI        V1, FF8A
   90:  SW        R0, 14 (SP)
   94:  SWC1      F4, 10 (SP)
   98:  SW        V0, 90 (S0)
   9C:  LI        V0, 2C
   A0:  SW        V0, 9C (S0)
   A4:  LI        V0, 3
   A8:  SW        R0, 94 (S0)
   AC:  SW        V1, 98 (S0)
   B0:  SW        V1, A0 (S0)
   B4:  BEQ       R0, R0, .oF0
   B8:  SW        V0, A4 (S0)
        .oBC
   BC:  LIF       F4, 91.0
   C4:  LIF       F30, -118.0
   CC:  LI        V0, FF8A
   D0:  SW        R0, 14 (SP)
   D4:  SWC1      F4, 10 (SP)
   D8:  SW        V1, 90 (S0)
   DC:  SW        R0, 94 (S0)
   E0:  SW        V0, 98 (S0)
   E4:  SW        V1, 9C (S0)
   E8:  SW        V0, A0 (S0)
   EC:  SW        S1, A4 (S0)
        .oF0
   F0:  SW        R0, A8 (S0)
   F4:  SW        R0, B0 (S0)
   F8:  BEQ       R0, R0, .o400
   FC:  SW        A0, 70 (S0)
        .o100
  100:  LW        V0, A8 (S0)
  104:  LW        V1, A4 (S0)
  108:  ADDU      V0, V0, V1
  10C:  SW        V0, A8 (S0)
  110:  SLTI      V0, V0, 2E
  114:  BNE       V0, R0, .o124
  118:  NOP
  11C:  LI        V0, 2D
  120:  SW        V0, A8 (S0)
        .o124
  124:  LWC1      F4, 90 (S0)
  128:  CVT.S.W   F4, F4
  12C:  SWC1      F4, 10 (SP)
  130:  LWC1      F4, 94 (S0)
  134:  CVT.S.W   F4, F4
  138:  SWC1      F4, 14 (SP)
  13C:  LWC1      F12, A8 (S0)
  140:  CVT.S.W   F12, F12
  144:  LIF       F26, 6.28318
  150:  LWC1      F30, 98 (S0)
  154:  CVT.S.W   F30, F30
  158:  MUL.S     F12, F12, F26
  15C:  NOP
  160:  LWC1      F28, 9C (S0)
  164:  CVT.S.W   F28, F28
  168:  LIF       F24, 360.0
  170:  LWC1      F4, A0 (S0)
  174:  CVT.S.W   F4, F4
  178:  SWC1      F4, 18 (SP)
  17C:  JAL       ~Func:sin_rad
  180:  DIV.S     F12, F12, F24
  184:  CVT.D.S   F0, F0
  188:  LIF       F23, 1.875
  190:  MTC1      R0, F22
  194:  LWC1      F4, 10 (SP)
  198:  SUB.D     F0, F22, F0
  19C:  CVT.D.S   F20, F4
  1A0:  MUL.D     F20, F20, F0
  1A4:  NOP
  1A8:  LWC1      F12, A8 (S0)
  1AC:  CVT.S.W   F12, F12
  1B0:  MUL.S     F12, F12, F26
  1B4:  NOP
  1B8:  JAL       ~Func:sin_rad
  1BC:  DIV.S     F12, F12, F24
  1C0:  MUL.S     F0, F28, F0
  1C4:  NOP
  1C8:  LW        V0, A8 (S0)
  1CC:  SLL       V0, V0, 1
  1D0:  MTC1      V0, F12
  1D4:  NOP
  1D8:  CVT.S.W   F12, F12
  1DC:  MUL.S     F12, F12, F26
  1E0:  NOP
  1E4:  CVT.D.S   F0, F0
  1E8:  ADD.D     F20, F20, F0
  1EC:  DIV.S     F12, F12, F24
  1F0:  CVT.S.D   F20, F20
  1F4:  JAL       ~Func:sin_rad
  1F8:  SWC1      F20, 10 (SP)
  1FC:  LWC1      F12, A8 (S0)
  200:  CVT.S.W   F12, F12
  204:  MUL.S     F12, F12, F26
  208:  NOP
  20C:  LIF       F2, 90.0
  214:  NOP
  218:  MUL.S     F0, F0, F2
  21C:  NOP
  220:  LWC1      F4, 14 (SP)
  224:  ADD.S     F4, F4, F0
  228:  DIV.S     F12, F12, F24
  22C:  JAL       ~Func:sin_rad
  230:  SWC1      F4, 14 (SP)
  234:  LWC1      F12, A8 (S0)
  238:  CVT.S.W   F12, F12
  23C:  MUL.S     F12, F12, F26
  240:  NOP
  244:  CVT.D.S   F0, F0
  248:  SUB.D     F22, F22, F0
  24C:  CVT.D.S   F20, F30
  250:  MUL.D     F20, F20, F22
  254:  NOP
  258:  JAL       ~Func:sin_rad
  25C:  DIV.S     F12, F12, F24
  260:  LWC1      F4, 18 (SP)
  264:  MUL.S     F0, F4, F0
  268:  NOP
  26C:  CVT.D.S   F0, F0
  270:  ADD.D     F20, F20, F0
  274:  BEQ       R0, R0, .o3F0
  278:  LI        V0, 2D
        .o27C
  27C:  LW        V0, A8 (S0)
  280:  LW        V1, A4 (S0)
  284:  ADDU      V0, V0, V1
  288:  SW        V0, A8 (S0)
  28C:  SLTI      V0, V0, 5B
  290:  BNE       V0, R0, .o29C
  294:  LI        V0, 5A
  298:  SW        V0, A8 (S0)
        .o29C
  29C:  LWC1      F4, 90 (S0)
  2A0:  CVT.S.W   F4, F4
  2A4:  SWC1      F4, 10 (SP)
  2A8:  LWC1      F4, 94 (S0)
  2AC:  CVT.S.W   F4, F4
  2B0:  SWC1      F4, 14 (SP)
  2B4:  LWC1      F12, A8 (S0)
  2B8:  CVT.S.W   F12, F12
  2BC:  LIF       F26, 6.28318
  2C8:  LWC1      F30, 98 (S0)
  2CC:  CVT.S.W   F30, F30
  2D0:  MUL.S     F12, F12, F26
  2D4:  NOP
  2D8:  LWC1      F28, 9C (S0)
  2DC:  CVT.S.W   F28, F28
  2E0:  LIF       F24, 360.0
  2E8:  LWC1      F4, A0 (S0)
  2EC:  CVT.S.W   F4, F4
  2F0:  SWC1      F4, 18 (SP)
  2F4:  JAL       ~Func:sin_rad
  2F8:  DIV.S     F12, F12, F24
  2FC:  CVT.D.S   F0, F0
  300:  LIF       F23, 1.875
  308:  MTC1      R0, F22
  30C:  LWC1      F4, 10 (SP)
  310:  SUB.D     F0, F22, F0
  314:  CVT.D.S   F20, F4
  318:  MUL.D     F20, F20, F0
  31C:  NOP
  320:  LWC1      F12, A8 (S0)
  324:  CVT.S.W   F12, F12
  328:  MUL.S     F12, F12, F26
  32C:  NOP
  330:  JAL       ~Func:sin_rad
  334:  DIV.S     F12, F12, F24
  338:  MUL.S     F0, F28, F0
  33C:  NOP
  340:  LW        V0, A8 (S0)
  344:  SLL       V0, V0, 1
  348:  MTC1      V0, F12
  34C:  NOP
  350:  CVT.S.W   F12, F12
  354:  MUL.S     F12, F12, F26
  358:  NOP
  35C:  CVT.D.S   F0, F0
  360:  ADD.D     F20, F20, F0
  364:  DIV.S     F12, F12, F24
  368:  CVT.S.D   F20, F20
  36C:  JAL       ~Func:sin_rad
  370:  SWC1      F20, 10 (SP)
  374:  LWC1      F12, A8 (S0)
  378:  CVT.S.W   F12, F12
  37C:  MUL.S     F12, F12, F26
  380:  NOP
  384:  LIF       F2, 90.0
  38C:  NOP
  390:  MUL.S     F0, F0, F2
  394:  NOP
  398:  LWC1      F4, 14 (SP)
  39C:  ADD.S     F4, F4, F0
  3A0:  DIV.S     F12, F12, F24
  3A4:  JAL       ~Func:sin_rad
  3A8:  SWC1      F4, 14 (SP)
  3AC:  LWC1      F12, A8 (S0)
  3B0:  CVT.S.W   F12, F12
  3B4:  MUL.S     F12, F12, F26
  3B8:  NOP
  3BC:  CVT.D.S   F0, F0
  3C0:  SUB.D     F22, F22, F0
  3C4:  CVT.D.S   F20, F30
  3C8:  MUL.D     F20, F20, F22
  3CC:  NOP
  3D0:  JAL       ~Func:sin_rad
  3D4:  DIV.S     F12, F12, F24
  3D8:  LWC1      F4, 18 (SP)
  3DC:  MUL.S     F0, F4, F0
  3E0:  NOP
  3E4:  CVT.D.S   F0, F0
  3E8:  ADD.D     F20, F20, F0
  3EC:  LI        V0, 5A
        .o3F0
  3F0:  LW        V1, A8 (S0)
  3F4:  BNE       V1, V0, .o400
  3F8:  CVT.S.D   F30, F20
  3FC:  SW        S1, B0 (S0)
        .o400
  400:  LWC1      F4, 10 (SP)
  404:  TRUNC.W.S F4, F4
  408:  SWC1      F4, 84 (S0)
  40C:  LWC1      F4, 14 (SP)
  410:  TRUNC.W.S F4, F4
  414:  SWC1      F4, 88 (S0)
  418:  TRUNC.W.S F4, F30
  41C:  SWC1      F4, 8C (S0)
  420:  LW        RA, 28 (SP)
  424:  LW        S1, 24 (SP)
  428:  LW        S0, 20 (SP)
  42C:  LDC1      F30, 58 (SP)
  430:  LDC1      F28, 50 (SP)
  434:  LDC1      F26, 48 (SP)
  438:  LDC1      F24, 40 (SP)
  43C:  LDC1      F22, 38 (SP)
  440:  LDC1      F20, 30 (SP)
  444:  LI        V0, 2
  448:  JR        RA
  44C:  ADDIU     SP, SP, 60
}

#new:Script $Script_80231770
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  $Function_80219900    ( 00000000 )
   2C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   48:  Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
   68:  Wait  1`
   74:  Loop
   80:  	Call  $Function_80219900    ( 00000001 )
   90:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   AC:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
   CC:  	Wait  1`
   D8:  	If  *VarB  ==  00000001
   E8:  		BreakLoop
   F0:  	EndIf
   F8:  EndLoop
  100:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  11C:  Call  RotateModel       ( *VarA FFFFFFF9 00000000 00000000 00000001 )
  13C:  Wait  5`
  148:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  164:  Call  RotateModel       ( *VarA FFFFFFE5 00000000 00000000 00000001 )
  184:  Wait  2`
  190:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  1AC:  Call  RotateModel       ( *VarA FFFFFFFB 00000000 00000000 00000001 )
  1CC:  Wait  3`
  1D8:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  1F4:  Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  214:  Wait  5`
  220:  Loop
  22C:  	Call  $Function_80219900    ( 00000002 )
  23C:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  258:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  278:  	Wait  1`
  284:  	If  *VarB  ==  00000002
  294:  		BreakLoop
  29C:  	EndIf
  2A4:  EndLoop
  2AC:  Call  RandInt   ( 00000050 *VarB )
  2C0:  Add   *VarB  0000001E
  2D0:  Loop  *VarB
  2DC:  	Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  2F8:  	Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  318:  	Wait  1`
  324:  EndLoop
  32C:  Call  RandInt   ( 00000005 *Var0 )
  340:  If  *Var0  !=  00000000
  350:  	Goto  0
  35C:  EndIf
  364:  Call  $Function_80219900    ( 00000003 )
  374:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  390:  Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  3B0:  Wait  1`
  3BC:  Loop
  3C8:  	Call  $Function_80219900    ( 00000001 )
  3D8:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  3F4:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  414:  	Wait  1`
  420:  	If  *VarB  ==  00000001
  430:  		BreakLoop
  438:  	EndIf
  440:  EndLoop
  448:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  464:  Call  RotateModel       ( *VarA FFFFFFF9 00000000 00000000 00000001 )
  484:  Wait  5`
  490:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  4AC:  Call  RotateModel       ( *VarA FFFFFFE5 00000000 00000000 00000001 )
  4CC:  Wait  2`
  4D8:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  4F4:  Call  RotateModel       ( *VarA FFFFFFFB 00000000 00000000 00000001 )
  514:  Wait  3`
  520:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  53C:  Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  55C:  Wait  5`
  568:  Loop
  574:  	Call  $Function_80219900    ( 00000002 )
  584:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  5A0:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  5C0:  	Wait  1`
  5CC:  	If  *VarB  ==  00000002
  5DC:  		BreakLoop
  5E4:  	EndIf
  5EC:  EndLoop
  5F4:  Call  RandInt   ( 00000050 *VarB )
  608:  Add   *VarB  0000001E
  618:  Loop  *VarB
  624:  	Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  640:  	Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  660:  	Wait  1`
  66C:  EndLoop
  674:  Goto  0
  680:  Return
  688:  End
}

#new:Script $Script_80231E00
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  2`
   6C:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   88:  	Wait  2`
   94:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
   B0:  	Wait  2`
   BC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
   D8:  	Wait  2`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  150:  	Wait  2`
  15C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  178:  	Wait  2`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  1C8:  	Wait  2`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1F0:  	Wait  2`
  1FC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  268:  	Wait  2`
  274:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  290:  	Wait  2`
  29C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2B8:  	Wait  2`
  2C4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  2E0:  	Wait  2`
  2EC:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  308:  	Wait  2`
  314:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  330:  	Wait  2`
  33C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  358:  	Wait  2`
  364:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  380:  	Wait  2`
  38C:  EndLoop
  394:  Return
  39C:  End
}

#new:Script $Script_BeforeBattle_802327F4
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
   2C:  Thread
   34:  	Set   *Var0  0000002C
   44:  	Exec  $Script_80231E00
   50:  	Wait  5`
   5C:  	Set   *Var0  0000002F
   6C:  	Exec  $Script_80231E00
   78:  	Wait  5`
   84:  	Set   *Var0  0000002E
   94:  	Exec  $Script_80231E00
   A0:  	Wait  5`
   AC:  	Set   *Var0  0000002D
   BC:  	Exec  $Script_80231E00
   C8:  EndThread
   D0:  Set   *Var0  00000028
   E0:  Exec  $Script_80231770
   EC:  Return
   F4:  End
}

#new:Script $Script_AfterBattle_802328F0
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80232900
{
	$ASCII_80232B98  % mac_tex
	$ASCII_80232B88  % mac_bt01_shape
	$ASCII_80232B78  % mac_bt01_hit
	$Script_BeforeBattle_802327F4
	$Script_AfterBattle_802328F0
	$ASCII_80232B70  % nok_bg
	00000000
	00000000
	00000000
	00000000
}

#new:Script $Script_BeforeBattle_80232930
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
   2C:  Call  802536A8  ( 00000001 )
   3C:  Return
   44:  End
}

#new:Script $Script_AfterBattle_8023297C
{
    0:  Call  802536A8  ( 00000000 )
   10:  Return
   18:  End
}

#new:Stage $Stage_8023299C
{
	$ASCII_80232BC0  % mac_tex
	$ASCII_80232BB0  % mac_bt02_shape
	$ASCII_80232BA0  % mac_bt02_hit
	$Script_BeforeBattle_80232930
	$Script_AfterBattle_8023297C
	00000000
	00000000
	00000000
	00000000
	00000000
}

#new:Formation $Formation_00
{
	$03_Chan 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$03_Lee 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$03_TheMaster1 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$03_TheMaster2 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$03_TheMaster3 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80232C00 00000001 $Formation_00 $Stage_8023299C 00000000
	$SJIS_80232BF8 00000001 $Formation_01 $Stage_8023299C 00000000
	$SJIS_80232BE8 00000001 $Formation_02 $Stage_8023299C 00000000
	$SJIS_80232BD8 00000001 $Formation_03 $Stage_8023299C 00000000
	$SJIS_80232BC8 00000001 $Formation_04 $Stage_8023299C 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80232C10 $Stage_80232900
	$ASCII_80232C08 $Stage_8023299C
	00000000 00000000
}

#new:ASCII $ASCII_80232B70
{
	"nok_bg"
}

#new:ASCII $ASCII_80232B78
{
	"mac_bt01_hit"
}

#new:ASCII $ASCII_80232B88
{
	"mac_bt01_shape"
}

#new:ASCII $ASCII_80232B98
{
	"mac_tex"
}

#new:ASCII $ASCII_80232BA0
{
	"mac_bt02_hit"
}

#new:ASCII $ASCII_80232BB0
{
	"mac_bt02_shape"
}

#new:ASCII $ASCII_80232BC0
{
	"mac_tex"
}

#new:SJIS $SJIS_80232BC8
{
	シショー その３ % shisho- sono3
}

#new:SJIS $SJIS_80232BD8
{
	シショー その２ % shisho- sono2
}

#new:SJIS $SJIS_80232BE8
{
	シショー その１ % shisho- sono1
}

#new:SJIS $SJIS_80232BF8
{
	リー % ri-
}

#new:SJIS $SJIS_80232C00
{
	チェン % chen
}

#new:ASCII $ASCII_80232C08
{
	"mac_02"
}

#new:ASCII $ASCII_80232C10
{
	"mac_01"
}



