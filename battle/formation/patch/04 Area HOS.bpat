% Get actor data from /formation/import
% to make easier to grab the enemies code from this mod to future projects

#import enemy/04_GoombarioTutor1.bpat
#import enemy/04_Ember.bpat
#import enemy/04_Magikoopa.bpat

% Origin: HEURISTIC
#new:Function $Function_802184C0
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S3, 2C (SP)
    8:  ADDIU     S3, A0, FFFF
    C:  COPY      A0, S3
   10:  ADDIU     A1, SP, 10
   14:  ADDIU     A2, SP, 14
   18:  ADDIU     A3, SP, 18
   1C:  SW        RA, 3C (SP)
   20:  SW        S6, 38 (SP)
   24:  SW        S5, 34 (SP)
   28:  SW        S4, 30 (SP)
   2C:  SW        S2, 28 (SP)
   30:  SW        S1, 24 (SP)
   34:  JAL       8011C2B0
   38:  SW        S0, 20 (SP)
   3C:  LW        V0, 18 (SP)
   40:  BLEZ      V0, .o188
   44:  CLEAR     S0
   48:  LA        V1, $???_80224BB0
   50:  SLL       V0, S3, 1
   54:  ADDU      S5, V0, V1
   58:  LI        S4, 55555556
   60:  ORI       S6, R0, 8000
   64:  MULT      S0, S4
        .o68
   68:  SRA       S2, S0, 1F
   6C:  MFHI      V1
   70:  SUBU      V1, V1, S2
   74:  SLL       V0, V1, 1
   78:  ADDU      V0, V0, V1
   7C:  SUBU      V0, S0, V0
   80:  LHU       V1, 0 (S5)
   84:  ADDIU     V0, V0, 1
   88:  MULT      V1, V0
   8C:  SLL       V0, S0, 4
   90:  MFLO      V1
   94:  ADDU      A0, V1, S0
   98:  LW        V1, 14 (SP)
   9C:  ANDI      A0, A0, FFFF
   A0:  JAL       ~Func:sins
   A4:  ADDU      S1, V1, V0
   A8:  SLL       V0, V0, 10
   AC:  SRA       V0, V0, 10
   B0:  ADDU      V0, V0, S6
   B4:  SRL       V1, V0, 1F
   B8:  ADDU      V0, V0, V1
   BC:  SLL       V0, V0, F
   C0:  SRA       V0, V0, 10
   C4:  SLL       V1, V0, 2
   C8:  ADDU      V1, V1, V0
   CC:  SLL       V0, V1, 5
   D0:  SUBU      V1, V0, V1
   D4:  BGEZ      V1, .oE0
   D8:  COPY      V0, V1
   DC:  ADDIU     V0, V1, 7FFF
        .oE0
   E0:  SRA       V0, V0, F
   E4:  ADDIU     V0, V0, 64
   E8:  SB        V0, C (S1)
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S4
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S5)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S6
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, E (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o68
  184:  MULT      S0, S4
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S3
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       8011C2EC
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_80224BB0
  1BC:  SLL       V1, S3, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

% Origin: HEURISTIC
#new:Function $Function_802186B8
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 28 (SP)
    8:  ADDIU     S2, A0, FFFF
    C:  COPY      A0, S2
   10:  ADDIU     A1, SP, 10
   14:  ADDIU     A2, SP, 14
   18:  SW        RA, 3C (SP)
   1C:  SW        S6, 38 (SP)
   20:  SW        S5, 34 (SP)
   24:  SW        S4, 30 (SP)
   28:  SW        S3, 2C (SP)
   2C:  SW        S1, 24 (SP)
   30:  SW        S0, 20 (SP)
   34:  SDC1      F20, 40 (SP)
   38:  JAL       8011C2B0
   3C:  ADDIU     A3, SP, 18
   40:  LW        V0, 18 (SP)
   44:  BLEZ      V0, .o2A4
   48:  CLEAR     S0
   4C:  LA        V1, $???_80224BB0
   54:  SLL       V0, S2, 1
   58:  ADDU      S4, V0, V1
   5C:  LI        S3, 55555556
   64:  ORI       S6, R0, 8000
   68:  LIF       F21, 28.0
   70:  MTC1      R0, F20
   74:  LUI       S5, 8000
   78:  MULT      S0, S3
        .o7C
   7C:  SRA       V1, S0, 1F
   80:  MFHI      T1
   84:  SUBU      V1, T1, V1
   88:  SLL       V0, V1, 1
   8C:  ADDU      V0, V0, V1
   90:  SUBU      V0, S0, V0
   94:  LHU       V1, 0 (S4)
   98:  ADDIU     V0, V0, 1
   9C:  MULT      V1, V0
   A0:  LW        V0, 14 (SP)
   A4:  MFLO      V1
   A8:  ADDU      A0, V1, S0
   AC:  ANDI      A0, A0, FFFF
   B0:  SLL       V1, S0, 4
   B4:  ADDU      V0, V0, V1
   B8:  JAL       ~Func:sins
   BC:  ADDIU     S1, V0, C
   C0:  SLL       V0, V0, 10
   C4:  SRA       V0, V0, 10
   C8:  ADDU      V0, V0, S6
   CC:  SRL       V1, V0, 1F
   D0:  ADDU      V0, V0, V1
   D4:  SRA       V0, V0, 1
   D8:  SLL       V1, V0, 10
   DC:  SRA       V1, V1, 10
   E0:  SLL       A0, V1, 2
   E4:  ADDU      A0, A0, V1
   E8:  SLL       V1, A0, 5
   EC:  SUBU      V1, V1, A0
   F0:  BGEZ      V1, .oFC
   F4:  COPY      A0, V0
   F8:  ADDIU     V1, V1, 7FFF
        .oFC
   FC:  SRA       V0, V1, F
  100:  LAD       F2, $ConstDouble_80225FB0
  108:  MTC1      V0, F0
  10C:  NOP
  110:  CVT.D.W   F0, F0
  114:  ADD.D     F0, F0, F2
  118:  C.LE.D    F20, F0
  11C:  NOP
  120:  BC1TL     .o138
  124:  SUB.D     F0, F0, F20
  128:  TRUNC.W.D F4, F0
  12C:  MFC1      V0, F4
  130:  BEQ       R0, R0, .o14C
  134:  SB        V0, 0 (S1)
        .o138
  138:  TRUNC.W.D F4, F0
  13C:  MFC1      V0, F4
  140:  NOP
  144:  OR        V0, V0, S5
  148:  SB        V0, 0 (S1)
        .o14C
  14C:  SLL       V0, A0, 10
  150:  SRA       V0, V0, 10
  154:  SLL       V1, V0, 2
  158:  ADDU      V1, V1, V0
  15C:  SLL       V0, V1, 5
  160:  SUBU      V0, V0, V1
  164:  BGEZ      V0, .o170
  168:  ADDIU     V1, S1, 1
  16C:  ADDIU     V0, V0, 7FFF
        .o170
  170:  SRA       V0, V0, F
  174:  LAD       F2, $ConstDouble_80225FB8
  17C:  MTC1      V0, F0
  180:  NOP
  184:  CVT.D.W   F0, F0
  188:  ADD.D     F0, F0, F2
  18C:  C.LE.D    F20, F0
  190:  NOP
  194:  BC1TL     .o1AC
  198:  SUB.D     F0, F0, F20
  19C:  TRUNC.W.D F4, F0
  1A0:  MFC1      V0, F4
  1A4:  BEQ       R0, R0, .o1C0
  1A8:  SB        V0, 0 (V1)
        .o1AC
  1AC:  TRUNC.W.D F4, F0
  1B0:  MFC1      V0, F4
  1B4:  NOP
  1B8:  OR        V0, V0, S5
  1BC:  SB        V0, 0 (V1)
        .o1C0
  1C0:  SRL       V1, S0, 1F
  1C4:  ADDU      V1, S0, V1
  1C8:  SRA       A1, V1, 1
  1CC:  MULT      A1, S3
  1D0:  LHU       A0, 0 (S4)
  1D4:  SRA       V1, V1, 1F
  1D8:  SRL       A2, A0, F
  1DC:  MFHI      T1
  1E0:  SUBU      V1, T1, V1
  1E4:  SLL       V0, V1, 1
  1E8:  ADDU      V0, V0, V1
  1EC:  SUBU      A1, A1, V0
  1F0:  ADDIU     A1, A1, 1
  1F4:  SLL       A1, A1, F
  1F8:  MULT      A2, A1
  1FC:  SRL       A0, A0, E
  200:  SLL       A0, A0, F
  204:  MFLO      V1
  208:  ADDU      A0, V1, A0
  20C:  ADDU      A0, A0, S0
  210:  JAL       ~Func:sins
  214:  ANDI      A0, A0, FFFF
  218:  SLL       V0, V0, 10
  21C:  SRA       V0, V0, 10
  220:  LBU       V1, 0 (S1)
  224:  ADDU      V0, V0, S6
  228:  MULT      V1, V0
  22C:  MFLO      V1
  230:  BGEZ      V1, .o240
  234:  ADDIU     A0, S1, 2
  238:  ORI       V0, R0, FFFF
  23C:  ADDU      V1, V1, V0
        .o240
  240:  SRA       V0, V1, 10
  244:  LAD       F2, $ConstDouble_80225FC0
  24C:  MTC1      V0, F0
  250:  NOP
  254:  CVT.D.W   F0, F0
  258:  ADD.D     F0, F0, F2
  25C:  C.LE.D    F20, F0
  260:  NOP
  264:  BC1TL     .o27C
  268:  SUB.D     F0, F0, F20
  26C:  TRUNC.W.D F4, F0
  270:  MFC1      V0, F4
  274:  BEQ       R0, R0, .o290
  278:  SB        V0, 0 (A0)
        .o27C
  27C:  TRUNC.W.D F4, F0
  280:  MFC1      V0, F4
  284:  NOP
  288:  OR        V0, V0, S5
  28C:  SB        V0, 0 (A0)
        .o290
  290:  LW        V0, 18 (SP)
  294:  ADDIU     S0, S0, 1
  298:  SLT       V0, S0, V0
  29C:  BNE       V0, R0, .o7C
  2A0:  MULT      S0, S3
        .o2A4
  2A4:  LA        V1, 8009A66C
  2AC:  LW        V0, 0 (V1)
  2B0:  COPY      A0, S2
  2B4:  COPY      S0, V0
  2B8:  ADDIU     V0, V0, 8
  2BC:  SW        V0, 0 (V1)
  2C0:  LUI       V0, DE00
  2C4:  JAL       8011C2EC
  2C8:  SW        V0, 0 (S0)
  2CC:  SW        V0, 4 (S0)
  2D0:  LA        V0, $???_80224BB0
  2D8:  SLL       V1, S2, 1
  2DC:  ADDU      V1, V1, V0
  2E0:  LHU       V0, 0 (V1)
  2E4:  ADDIU     V0, V0, 253
  2E8:  SH        V0, 0 (V1)
  2EC:  LW        RA, 3C (SP)
  2F0:  LW        S6, 38 (SP)
  2F4:  LW        S5, 34 (SP)
  2F8:  LW        S4, 30 (SP)
  2FC:  LW        S3, 2C (SP)
  300:  LW        S2, 28 (SP)
  304:  LW        S1, 24 (SP)
  308:  LW        S0, 20 (SP)
  30C:  LDC1      F20, 40 (SP)
  310:  JR        RA
  314:  ADDIU     SP, SP, 48
}

% Origin: HEURISTIC
#new:Function $Function_802189D0
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 28 (SP)
    8:  ADDIU     S2, A0, FFFF
    C:  COPY      A0, S2
   10:  ADDIU     A1, SP, 10
   14:  ADDIU     A2, SP, 14
   18:  SW        RA, 3C (SP)
   1C:  SW        S6, 38 (SP)
   20:  SW        S5, 34 (SP)
   24:  SW        S4, 30 (SP)
   28:  SW        S3, 2C (SP)
   2C:  SW        S1, 24 (SP)
   30:  SW        S0, 20 (SP)
   34:  SDC1      F20, 40 (SP)
   38:  JAL       8011C2B0
   3C:  ADDIU     A3, SP, 18
   40:  LW        V0, 18 (SP)
   44:  BLEZ      V0, .o2A8
   48:  CLEAR     S0
   4C:  LA        V1, $???_80224BB0
   54:  SLL       V0, S2, 1
   58:  ADDU      S4, V0, V1
   5C:  LI        S3, 55555556
   64:  ORI       S6, R0, 8000
   68:  LIF       F21, 28.0
   70:  MTC1      R0, F20
   74:  LUI       S5, 8000
   78:  MULT      S0, S3
        .o7C
   7C:  SRA       V1, S0, 1F
   80:  MFHI      T1
   84:  SUBU      V1, T1, V1
   88:  SLL       V0, V1, 1
   8C:  ADDU      V0, V0, V1
   90:  SUBU      V0, S0, V0
   94:  LHU       V1, 0 (S4)
   98:  ADDIU     V0, V0, 1
   9C:  MULT      V1, V0
   A0:  LW        V0, 14 (SP)
   A4:  MFLO      V1
   A8:  ADDU      A0, V1, S0
   AC:  ANDI      A0, A0, FFFF
   B0:  SLL       V1, S0, 4
   B4:  ADDU      V0, V0, V1
   B8:  JAL       ~Func:sins
   BC:  ADDIU     S1, V0, C
   C0:  SLL       V0, V0, 10
   C4:  SRA       V0, V0, 10
   C8:  ADDU      V0, V0, S6
   CC:  SRL       V1, V0, 1F
   D0:  ADDU      V0, V0, V1
   D4:  SRA       V0, V0, 1
   D8:  SLL       V1, V0, 10
   DC:  SRA       V1, V1, 10
   E0:  SLL       A0, V1, 2
   E4:  ADDU      A0, A0, V1
   E8:  SLL       V1, A0, 5
   EC:  SUBU      V1, V1, A0
   F0:  BGEZ      V1, .oFC
   F4:  COPY      A0, V0
   F8:  ADDIU     V1, V1, 7FFF
        .oFC
   FC:  SRA       V0, V1, F
  100:  LAD       F2, $ConstDouble_80225FC8
  108:  MTC1      V0, F0
  10C:  NOP
  110:  CVT.D.W   F0, F0
  114:  ADD.D     F0, F0, F2
  118:  C.LE.D    F20, F0
  11C:  NOP
  120:  BC1TL     .o138
  124:  SUB.D     F0, F0, F20
  128:  TRUNC.W.D F4, F0
  12C:  MFC1      V0, F4
  130:  BEQ       R0, R0, .o14C
  134:  SB        V0, 0 (S1)
        .o138
  138:  TRUNC.W.D F4, F0
  13C:  MFC1      V0, F4
  140:  NOP
  144:  OR        V0, V0, S5
  148:  SB        V0, 0 (S1)
        .o14C
  14C:  SLL       V0, A0, 10
  150:  SRA       V0, V0, 10
  154:  SLL       V1, V0, 2
  158:  ADDU      V1, V1, V0
  15C:  SLL       V0, V1, 5
  160:  SUBU      V0, V0, V1
  164:  BGEZ      V0, .o170
  168:  ADDIU     V1, S1, 1
  16C:  ADDIU     V0, V0, 7FFF
        .o170
  170:  SRA       V0, V0, F
  174:  LIF       F3, 3.390625
  17C:  MTC1      R0, F2
  180:  MTC1      V0, F0
  184:  NOP
  188:  CVT.D.W   F0, F0
  18C:  ADD.D     F0, F0, F2
  190:  C.LE.D    F20, F0
  194:  NOP
  198:  BC1TL     .o1B0
  19C:  SUB.D     F0, F0, F20
  1A0:  TRUNC.W.D F4, F0
  1A4:  MFC1      V0, F4
  1A8:  BEQ       R0, R0, .o1C4
  1AC:  SB        V0, 0 (V1)
        .o1B0
  1B0:  TRUNC.W.D F4, F0
  1B4:  MFC1      V0, F4
  1B8:  NOP
  1BC:  OR        V0, V0, S5
  1C0:  SB        V0, 0 (V1)
        .o1C4
  1C4:  SRL       V1, S0, 1F
  1C8:  ADDU      V1, S0, V1
  1CC:  SRA       A1, V1, 1
  1D0:  MULT      A1, S3
  1D4:  LHU       A0, 0 (S4)
  1D8:  SRA       V1, V1, 1F
  1DC:  SRL       A2, A0, F
  1E0:  MFHI      T1
  1E4:  SUBU      V1, T1, V1
  1E8:  SLL       V0, V1, 1
  1EC:  ADDU      V0, V0, V1
  1F0:  SUBU      A1, A1, V0
  1F4:  ADDIU     A1, A1, 1
  1F8:  SLL       A1, A1, F
  1FC:  MULT      A2, A1
  200:  SRL       A0, A0, E
  204:  SLL       A0, A0, F
  208:  MFLO      V1
  20C:  ADDU      A0, V1, A0
  210:  ADDU      A0, A0, S0
  214:  JAL       ~Func:sins
  218:  ANDI      A0, A0, FFFF
  21C:  SLL       V0, V0, 10
  220:  SRA       V0, V0, 10
  224:  LBU       V1, 0 (S1)
  228:  ADDU      V0, V0, S6
  22C:  MULT      V1, V0
  230:  MFLO      V1
  234:  BGEZ      V1, .o244
  238:  ADDIU     A0, S1, 2
  23C:  ORI       V0, R0, FFFF
  240:  ADDU      V1, V1, V0
        .o244
  244:  SRA       V0, V1, 10
  248:  LAD       F2, $ConstDouble_80225FD0
  250:  MTC1      V0, F0
  254:  NOP
  258:  CVT.D.W   F0, F0
  25C:  ADD.D     F0, F0, F2
  260:  C.LE.D    F20, F0
  264:  NOP
  268:  BC1TL     .o280
  26C:  SUB.D     F0, F0, F20
  270:  TRUNC.W.D F4, F0
  274:  MFC1      V0, F4
  278:  BEQ       R0, R0, .o294
  27C:  SB        V0, 0 (A0)
        .o280
  280:  TRUNC.W.D F4, F0
  284:  MFC1      V0, F4
  288:  NOP
  28C:  OR        V0, V0, S5
  290:  SB        V0, 0 (A0)
        .o294
  294:  LW        V0, 18 (SP)
  298:  ADDIU     S0, S0, 1
  29C:  SLT       V0, S0, V0
  2A0:  BNE       V0, R0, .o7C
  2A4:  MULT      S0, S3
        .o2A8
  2A8:  LA        V1, 8009A66C
  2B0:  LW        V0, 0 (V1)
  2B4:  COPY      A0, S2
  2B8:  COPY      S0, V0
  2BC:  ADDIU     V0, V0, 8
  2C0:  SW        V0, 0 (V1)
  2C4:  LUI       V0, DE00
  2C8:  JAL       8011C2EC
  2CC:  SW        V0, 0 (S0)
  2D0:  SW        V0, 4 (S0)
  2D4:  LA        V0, $???_80224BB0
  2DC:  SLL       V1, S2, 1
  2E0:  ADDU      V1, V1, V0
  2E4:  LHU       V0, 0 (V1)
  2E8:  ADDIU     V0, V0, 253
  2EC:  SH        V0, 0 (V1)
  2F0:  LW        RA, 3C (SP)
  2F4:  LW        S6, 38 (SP)
  2F8:  LW        S5, 34 (SP)
  2FC:  LW        S4, 30 (SP)
  300:  LW        S3, 2C (SP)
  304:  LW        S2, 28 (SP)
  308:  LW        S1, 24 (SP)
  30C:  LW        S0, 20 (SP)
  310:  LDC1      F20, 40 (SP)
  314:  JR        RA
  318:  ADDIU     SP, SP, 48
}

% Origin: HEURISTIC
#new:Function $Function_80218CEC
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 28 (SP)
    8:  ADDIU     S2, A0, FFFF
    C:  COPY      A0, S2
   10:  ADDIU     A1, SP, 10
   14:  ADDIU     A2, SP, 14
   18:  SW        RA, 3C (SP)
   1C:  SW        S6, 38 (SP)
   20:  SW        S5, 34 (SP)
   24:  SW        S4, 30 (SP)
   28:  SW        S3, 2C (SP)
   2C:  SW        S1, 24 (SP)
   30:  SW        S0, 20 (SP)
   34:  SDC1      F20, 40 (SP)
   38:  JAL       8011C2B0
   3C:  ADDIU     A3, SP, 18
   40:  LW        V0, 18 (SP)
   44:  BLEZ      V0, .o2A8
   48:  CLEAR     S0
   4C:  LA        V1, $???_80224BB0
   54:  SLL       V0, S2, 1
   58:  ADDU      S4, V0, V1
   5C:  LI        S3, 55555556
   64:  ORI       S6, R0, 8000
   68:  LIF       F21, 28.0
   70:  MTC1      R0, F20
   74:  LUI       S5, 8000
   78:  MULT      S0, S3
        .o7C
   7C:  SRA       V1, S0, 1F
   80:  MFHI      T1
   84:  SUBU      V1, T1, V1
   88:  SLL       V0, V1, 1
   8C:  ADDU      V0, V0, V1
   90:  SUBU      V0, S0, V0
   94:  LHU       V1, 0 (S4)
   98:  ADDIU     V0, V0, 1
   9C:  MULT      V1, V0
   A0:  LW        V0, 14 (SP)
   A4:  MFLO      V1
   A8:  ADDU      A0, V1, S0
   AC:  ANDI      A0, A0, FFFF
   B0:  SLL       V1, S0, 4
   B4:  ADDU      V0, V0, V1
   B8:  JAL       ~Func:sins
   BC:  ADDIU     S1, V0, C
   C0:  SLL       V0, V0, 10
   C4:  SRA       V0, V0, 10
   C8:  ADDU      V0, V0, S6
   CC:  SRL       V1, V0, 1F
   D0:  ADDU      V0, V0, V1
   D4:  SRA       V0, V0, 1
   D8:  SLL       V1, V0, 10
   DC:  SRA       V1, V1, 10
   E0:  SLL       A0, V1, 2
   E4:  ADDU      A0, A0, V1
   E8:  SLL       V1, A0, 5
   EC:  SUBU      V1, V1, A0
   F0:  BGEZ      V1, .oFC
   F4:  COPY      A0, V0
   F8:  ADDIU     V1, V1, 7FFF
        .oFC
   FC:  SRA       V0, V1, F
  100:  LIF       F3, 3.390625
  108:  MTC1      R0, F2
  10C:  MTC1      V0, F0
  110:  NOP
  114:  CVT.D.W   F0, F0
  118:  ADD.D     F0, F0, F2
  11C:  C.LE.D    F20, F0
  120:  NOP
  124:  BC1TL     .o13C
  128:  SUB.D     F0, F0, F20
  12C:  TRUNC.W.D F4, F0
  130:  MFC1      V0, F4
  134:  BEQ       R0, R0, .o150
  138:  SB        V0, 0 (S1)
        .o13C
  13C:  TRUNC.W.D F4, F0
  140:  MFC1      V0, F4
  144:  NOP
  148:  OR        V0, V0, S5
  14C:  SB        V0, 0 (S1)
        .o150
  150:  SLL       V0, A0, 10
  154:  SRA       V0, V0, 10
  158:  SLL       V1, V0, 2
  15C:  ADDU      V1, V1, V0
  160:  SLL       V0, V1, 5
  164:  SUBU      V0, V0, V1
  168:  BGEZ      V0, .o174
  16C:  ADDIU     V1, S1, 1
  170:  ADDIU     V0, V0, 7FFF
        .o174
  174:  SRA       V0, V0, F
  178:  LAD       F2, $ConstDouble_80225FD8
  180:  MTC1      V0, F0
  184:  NOP
  188:  CVT.D.W   F0, F0
  18C:  ADD.D     F0, F0, F2
  190:  C.LE.D    F20, F0
  194:  NOP
  198:  BC1TL     .o1B0
  19C:  SUB.D     F0, F0, F20
  1A0:  TRUNC.W.D F4, F0
  1A4:  MFC1      V0, F4
  1A8:  BEQ       R0, R0, .o1C4
  1AC:  SB        V0, 0 (V1)
        .o1B0
  1B0:  TRUNC.W.D F4, F0
  1B4:  MFC1      V0, F4
  1B8:  NOP
  1BC:  OR        V0, V0, S5
  1C0:  SB        V0, 0 (V1)
        .o1C4
  1C4:  SRL       V1, S0, 1F
  1C8:  ADDU      V1, S0, V1
  1CC:  SRA       A1, V1, 1
  1D0:  MULT      A1, S3
  1D4:  LHU       A0, 0 (S4)
  1D8:  SRA       V1, V1, 1F
  1DC:  SRL       A2, A0, F
  1E0:  MFHI      T1
  1E4:  SUBU      V1, T1, V1
  1E8:  SLL       V0, V1, 1
  1EC:  ADDU      V0, V0, V1
  1F0:  SUBU      A1, A1, V0
  1F4:  ADDIU     A1, A1, 1
  1F8:  SLL       A1, A1, F
  1FC:  MULT      A2, A1
  200:  SRL       A0, A0, E
  204:  SLL       A0, A0, F
  208:  MFLO      V1
  20C:  ADDU      A0, V1, A0
  210:  ADDU      A0, A0, S0
  214:  JAL       ~Func:sins
  218:  ANDI      A0, A0, FFFF
  21C:  SLL       V0, V0, 10
  220:  SRA       V0, V0, 10
  224:  LBU       V1, 0 (S1)
  228:  ADDU      V0, V0, S6
  22C:  MULT      V1, V0
  230:  MFLO      V1
  234:  BGEZ      V1, .o244
  238:  ADDIU     A0, S1, 2
  23C:  ORI       V0, R0, FFFF
  240:  ADDU      V1, V1, V0
        .o244
  244:  SRA       V0, V1, 10
  248:  LAD       F2, $ConstDouble_80225FE0
  250:  MTC1      V0, F0
  254:  NOP
  258:  CVT.D.W   F0, F0
  25C:  ADD.D     F0, F0, F2
  260:  C.LE.D    F20, F0
  264:  NOP
  268:  BC1TL     .o280
  26C:  SUB.D     F0, F0, F20
  270:  TRUNC.W.D F4, F0
  274:  MFC1      V0, F4
  278:  BEQ       R0, R0, .o294
  27C:  SB        V0, 0 (A0)
        .o280
  280:  TRUNC.W.D F4, F0
  284:  MFC1      V0, F4
  288:  NOP
  28C:  OR        V0, V0, S5
  290:  SB        V0, 0 (A0)
        .o294
  294:  LW        V0, 18 (SP)
  298:  ADDIU     S0, S0, 1
  29C:  SLT       V0, S0, V0
  2A0:  BNE       V0, R0, .o7C
  2A4:  MULT      S0, S3
        .o2A8
  2A8:  LA        V1, 8009A66C
  2B0:  LW        V0, 0 (V1)
  2B4:  COPY      A0, S2
  2B8:  COPY      S0, V0
  2BC:  ADDIU     V0, V0, 8
  2C0:  SW        V0, 0 (V1)
  2C4:  LUI       V0, DE00
  2C8:  JAL       8011C2EC
  2CC:  SW        V0, 0 (S0)
  2D0:  SW        V0, 4 (S0)
  2D4:  LA        V0, $???_80224BB0
  2DC:  SLL       V1, S2, 1
  2E0:  ADDU      V1, V1, V0
  2E4:  LHU       V0, 0 (V1)
  2E8:  ADDIU     V0, V0, 253
  2EC:  SH        V0, 0 (V1)
  2F0:  LW        RA, 3C (SP)
  2F4:  LW        S6, 38 (SP)
  2F8:  LW        S5, 34 (SP)
  2FC:  LW        S4, 30 (SP)
  300:  LW        S3, 2C (SP)
  304:  LW        S2, 28 (SP)
  308:  LW        S1, 24 (SP)
  30C:  LW        S0, 20 (SP)
  310:  LDC1      F20, 40 (SP)
  314:  JR        RA
  318:  ADDIU     SP, SP, 48
}

#new:Unknown $???_80224BB0
{
	00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_BeforeBattle_80224BD0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  802C9C70  ( 00000000 00000005 00000001 )
   28:  Call  802C94A0  ( 00000001 $Function_802184C0 00000000 )
   40:  Call  802C90FC  ( 00000005 00000001 FFFFFFFF )
   58:  Call  SetModelFlags ( ~Model:hos_bt01:o345 00000080 .True )
   70:  Call  802C9C70  ( 00000001 00000010 00000001 )
   88:  Call  802C94A0  ( 00000002 $Function_802184C0 00000000 )
   A0:  Call  802C90FC  ( 00000010 00000002 FFFFFFFF )
   B8:  Call  SetModelFlags ( ~Model:hos_bt01:o338 00000080 .True )
   D0:  Call  802C9C70  ( 00000002 00000013 00000001 )
   E8:  Call  802C94A0  ( 00000003 $Function_802184C0 00000000 )
  100:  Call  802C90FC  ( 00000013 00000003 FFFFFFFF )
  118:  Call  SetModelFlags ( ~Model:hos_bt01:o344 00000080 .True )
  130:  Call  802C9C70  ( 00000003 0000001C 00000001 )
  148:  Call  802C94A0  ( 00000004 $Function_802184C0 00000000 )
  160:  Call  802C90FC  ( 0000001C 00000004 FFFFFFFF )
  178:  Call  SetModelFlags ( ~Model:hos_bt01:o354 00000080 .True )
  190:  Call  802C9C70  ( 00000004 0000001F 00000001 )
  1A8:  Call  802C94A0  ( 00000005 $Function_802184C0 00000000 )
  1C0:  Call  802C90FC  ( 0000001F 00000005 FFFFFFFF )
  1D8:  Call  SetModelFlags ( ~Model:hos_bt01:o341 00000080 .True )
  1F0:  Call  802C9C70  ( 00000005 00000007 00000001 )
  208:  Call  802C94A0  ( 00000006 $Function_802186B8 00000000 )
  220:  Call  802C90FC  ( 00000007 00000006 FFFFFFFF )
  238:  Call  SetModelFlags ( ~Model:hos_bt01:o352 00000080 .True )
  250:  Call  802C9C70  ( 00000006 00000025 00000001 )
  268:  Call  802C94A0  ( 00000007 $Function_802186B8 00000000 )
  280:  Call  802C90FC  ( 00000025 00000007 FFFFFFFF )
  298:  Call  SetModelFlags ( ~Model:hos_bt01:o346 00000080 .True )
  2B0:  Call  802C9C70  ( 00000007 00000009 00000001 )
  2C8:  Call  802C94A0  ( 00000008 $Function_802189D0 00000000 )
  2E0:  Call  802C90FC  ( 00000009 00000008 FFFFFFFF )
  2F8:  Call  SetModelFlags ( ~Model:hos_bt01:o349 00000080 .True )
  310:  Call  802C9C70  ( 00000008 00000019 00000001 )
  328:  Call  802C94A0  ( 00000009 $Function_802189D0 00000000 )
  340:  Call  802C90FC  ( 00000019 00000009 FFFFFFFF )
  358:  Call  SetModelFlags ( ~Model:hos_bt01:o353 00000080 .True )
  370:  Call  802C9C70  ( 00000009 00000016 00000001 )
  388:  Call  802C94A0  ( 0000000A $Function_80218CEC 00000000 )
  3A0:  Call  802C90FC  ( 00000016 0000000A FFFFFFFF )
  3B8:  Call  SetModelFlags ( ~Model:hos_bt01:o347 00000080 .True )
  3D0:  Thread
  3D8:  	Call  SetTexPanner  ( ~Model:hos_bt01:o332 00000000 )
  3EC:  	Call  SetTexPanner  ( ~Model:hos_bt01:o334 00000000 )
  400:  	Call  SetTexPanner  ( ~Model:hos_bt01:o333 00000000 )
  414:  	Call  SetTexPanner  ( ~Model:hos_bt01:o336 00000000 )
  428:  	Set   *Var0  00000000
  438:  	Set   *Var1  00000000
  448:  	Set   *Var2  00000000
  458:  	Set   *Var3  00000000
  468:  	Loop
  474:  		Add   *Var0  00000050
  484:  		Add   *Var1  FFFFFF6A
  494:  		If  *Var0  >  00008000
  4A4:  			Add   *Var0  FFFF8000
  4B4:  		EndIf
  4BC:  		If  *Var1  <  FFFF8000
  4CC:  			Add   *Var1  00008000
  4DC:  		EndIf
  4E4:  		Add   *Var2  FFFFFFCE
  4F4:  		Add   *Var3  00000064
  504:  		If  *Var2  <  FFFF8000
  514:  			Add   *Var2  00008000
  524:  		EndIf
  52C:  		If  *Var3  >  00008000
  53C:  			Add   *Var3  FFFF8000
  54C:  		EndIf
  554:  		Call  SetTexPanOffset   ( 00000000 00000000 *Var0 *Var1 )
  570:  		Call  SetTexPanOffset   ( 00000000 00000001 *Var2 *Var3 )
  58C:  		Wait  1`
  598:  	EndLoop
  5A0:  EndThread
  5A8:  Thread
  5B0:  	Label  2
  5BC:  	Call  MakeLerp  ( FFFFFFF9 00000007 0000001E .Easing:CosInOut )
  5D8:  	Label  0
  5E4:  	Call  UpdateLerp ( )
  5F0:  	Call  TranslateModel    ( ~Model:hos_bt01:o357 00000000 *Var0 00000000 )
  60C:  	Call  TranslateModel    ( ~Model:hos_bt01:o344 00000000 *Var0 00000000 )
  628:  	Call  TranslateModel    ( ~Model:hos_bt01:o361 00000000 *Var0 00000000 )
  644:  	Call  TranslateModel    ( ~Model:hos_bt01:o354 00000000 *Var0 00000000 )
  660:  	Call  TranslateModel    ( ~Model:hos_bt01:o341 00000000 *Var0 00000000 )
  67C:  	Call  TranslateModel    ( ~Model:hos_bt01:o362 00000000 *Var0 00000000 )
  698:  	Wait  1`
  6A4:  	If  *Var1  ==  00000001
  6B4:  		Goto  0
  6C0:  	EndIf
  6C8:  	Call  MakeLerp  ( 00000007 FFFFFFF9 0000001E .Easing:CosInOut )
  6E4:  	Label  1
  6F0:  	Call  UpdateLerp ( )
  6FC:  	Call  TranslateModel    ( ~Model:hos_bt01:o357 00000000 *Var0 00000000 )
  718:  	Call  TranslateModel    ( ~Model:hos_bt01:o344 00000000 *Var0 00000000 )
  734:  	Call  TranslateModel    ( ~Model:hos_bt01:o361 00000000 *Var0 00000000 )
  750:  	Call  TranslateModel    ( ~Model:hos_bt01:o354 00000000 *Var0 00000000 )
  76C:  	Call  TranslateModel    ( ~Model:hos_bt01:o341 00000000 *Var0 00000000 )
  788:  	Call  TranslateModel    ( ~Model:hos_bt01:o362 00000000 *Var0 00000000 )
  7A4:  	Wait  1`
  7B0:  	If  *Var1  ==  00000001
  7C0:  		Goto  1
  7CC:  	EndIf
  7D4:  	Goto  2
  7E0:  EndThread
  7E8:  Thread
  7F0:  	Label  3
  7FC:  	Call  MakeLerp  ( 00000007 FFFFFFF9 0000001E .Easing:CosInOut )
  818:  	Label  4
  824:  	Call  UpdateLerp ( )
  830:  	Call  TranslateModel    ( ~Model:hos_bt01:o363 00000000 *Var0 00000000 )
  84C:  	Call  TranslateModel    ( ~Model:hos_bt01:o343 00000000 *Var0 00000000 )
  868:  	Call  TranslateModel    ( ~Model:hos_bt01:o355 00000000 *Var0 00000000 )
  884:  	Call  TranslateModel    ( ~Model:hos_bt01:o338 00000000 *Var0 00000000 )
  8A0:  	Wait  1`
  8AC:  	If  *Var1  ==  00000001
  8BC:  		Goto  4
  8C8:  	EndIf
  8D0:  	Call  MakeLerp  ( FFFFFFF9 00000007 0000001E .Easing:CosInOut )
  8EC:  	Label  5
  8F8:  	Call  UpdateLerp ( )
  904:  	Call  TranslateModel    ( ~Model:hos_bt01:o363 00000000 *Var0 00000000 )
  920:  	Call  TranslateModel    ( ~Model:hos_bt01:o343 00000000 *Var0 00000000 )
  93C:  	Call  TranslateModel    ( ~Model:hos_bt01:o355 00000000 *Var0 00000000 )
  958:  	Call  TranslateModel    ( ~Model:hos_bt01:o338 00000000 *Var0 00000000 )
  974:  	Wait  1`
  980:  	If  *Var1  ==  00000001
  990:  		Goto  5
  99C:  	EndIf
  9A4:  	Goto  3
  9B0:  EndThread
  9B8:  Return
  9C0:  End
}

#new:Script $Script_AfterBattle_80225598
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802255A8
{
	~Model:hos_bt01:o345
	00000000
}

#new:Stage $Stage_802255B0
{
	$ASCII_80226010  % hos_tex
	$ASCII_80226000  % hos_bt01_shape
	$ASCII_80225FF0  % hos_bt01_hit
	$Script_BeforeBattle_80224BD0
	$Script_AfterBattle_80225598
	$ASCII_80225FE8  % hos_bg
	$ForegroundModelList_802255A8
	00000000
	00000000
	00000000
}



#new:Script $Script_802255E0
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  TranslateModel    ( *VarA 00000000 00000002 00000000 )
   38:  Wait  5`
   44:  Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   60:  Wait  5`
   6C:  Call  TranslateModel    ( *VarA 00000000 00000002 00000000 )
   88:  Wait  5`
   94:  Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   B0:  Wait  5`
   BC:  Call  RandInt   ( 0000001E *Var0 )
   D0:  Add   *Var0  0000001E
   E0:  Wait  *Var0
   EC:  Goto  0
   F8:  Return
  100:  End
}

#new:Script $Script_BeforeBattle_802256E8
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Thread
   18:  	Set   *Var0  00000013
   28:  	Exec  $Script_802255E0
   34:  	Wait  5`
   40:  	Set   *Var0  00000014
   50:  	Exec  $Script_802255E0
   5C:  	Wait  5`
   68:  	Set   *Var0  00000015
   78:  	Exec  $Script_802255E0
   84:  	Wait  5`
   90:  	Set   *Var0  00000016
   A0:  	Exec  $Script_802255E0
   AC:  	Wait  5`
   B8:  	Set   *Var0  00000017
   C8:  	Exec  $Script_802255E0
   D4:  	Wait  5`
   E0:  	Set   *Var0  00000018
   F0:  	Exec  $Script_802255E0
   FC:  	Wait  5`
  108:  	Set   *Var0  00000019
  118:  	Exec  $Script_802255E0
  124:  	Wait  5`
  130:  	Set   *Var0  0000001A
  140:  	Exec  $Script_802255E0
  14C:  	Wait  5`
  158:  	Set   *Var0  0000001B
  168:  	Exec  $Script_802255E0
  174:  	Wait  5`
  180:  	Set   *Var0  0000001C
  190:  	Exec  $Script_802255E0
  19C:  EndThread
  1A4:  Return
  1AC:  End
}

#new:Script $Script_AfterBattle_8022589C
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802258AC
{
	~Model:nok_bt02:hap
	~Model:nok_bt02:kusa3
	00000000
}

#new:Stage $Stage_802258B8
{
	$ASCII_80226048  % nok_tex
	$ASCII_80226038  % nok_bt02_shape
	$ASCII_80226028  % nok_bt02_hit
	$Script_BeforeBattle_802256E8
	$Script_AfterBattle_8022589C
	$ASCII_80226020  % nok_bg
	$ForegroundModelList_802258AC
	00000000
	00000000
	00000000
}

#new:Script $Script_BeforeBattle_802258E0
{
    0:  Thread
    8:  	Call  SetTexPanner  ( ~Model:hos_bt02:o372 00000001 )
   1C:  	Call  SetTexPanner  ( ~Model:hos_bt02:o375 00000001 )
   30:  	Set   *Var0  00000000
   40:  	Set   *Var1  00000000
   50:  	Set   *Var2  00000000
   60:  	Set   *Var3  00000000
   70:  	Loop
   7C:  		Add   *Var0  FFFFFFCE
   8C:  		Add   *Var1  0000012C
   9C:  		Add   *Var2  0000005A
   AC:  		Add   *Var3  FFFFFF38
   BC:  		Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
   D8:  		Call  SetTexPanOffset   ( 00000001 00000001 *Var2 *Var3 )
   F4:  		Wait  1`
  100:  	EndLoop
  108:  EndThread
  110:  Thread
  118:  	Set   *VarA  00000000
  128:  	Label  2
  134:  	Call  MakeLerp  ( FFFFFFF9 00000007 00000028 .Easing:CosInOut )
  150:  	Label  0
  15C:  	Call  UpdateLerp ( )
  168:  	Call  TranslateModel    ( ~Model:hos_bt02:o371 00000000 *Var0 00000000 )
  184:  	Call  TranslateModel    ( ~Model:hos_bt02:o372 00000000 *Var0 00000000 )
  1A0:  	Mul   *Var0  00000003
  1B0:  	Call  RotateModel       ( ~Model:hos_bt02:o371 *VarA 00000000 00000000 00000001 )
  1D0:  	Add   *VarA  FFFFFFFD
  1E0:  	Call  ClampAngleFloat   ( *VarA )
  1F0:  	Wait  1`
  1FC:  	If  *Var1  ==  00000001
  20C:  		Goto  0
  218:  	EndIf
  220:  	Call  MakeLerp  ( 00000007 FFFFFFF9 00000028 .Easing:CosInOut )
  23C:  	Label  1
  248:  	Call  UpdateLerp ( )
  254:  	Call  TranslateModel    ( ~Model:hos_bt02:o371 00000000 *Var0 00000000 )
  270:  	Call  TranslateModel    ( ~Model:hos_bt02:o372 00000000 *Var0 00000000 )
  28C:  	Mul   *Var0  00000003
  29C:  	Call  RotateModel       ( ~Model:hos_bt02:o371 *VarA 00000000 00000000 00000001 )
  2BC:  	Add   *VarA  FFFFFFFD
  2CC:  	Call  ClampAngleFloat   ( *VarA )
  2DC:  	Wait  1`
  2E8:  	If  *Var1  ==  00000001
  2F8:  		Goto  1
  304:  	EndIf
  30C:  	Goto  2
  318:  EndThread
  320:  Thread
  328:  	Set   *VarA  00000000
  338:  	Label  2
  344:  	Call  MakeLerp  ( FFFFFFF6 00000004 00000028 .Easing:CosInOut )
  360:  	Label  0
  36C:  	Call  UpdateLerp ( )
  378:  	Call  TranslateModel    ( ~Model:hos_bt02:o376 00000000 *Var0 00000000 )
  394:  	Call  TranslateModel    ( ~Model:hos_bt02:o375 00000000 *Var0 00000000 )
  3B0:  	Mul   *Var0  FFFFFFFD
  3C0:  	Call  RotateModel       ( ~Model:hos_bt02:o376 *VarA 00000000 00000000 00000001 )
  3E0:  	Add   *VarA  FFFFFFFD
  3F0:  	Call  ClampAngleFloat   ( *VarA )
  400:  	Wait  1`
  40C:  	If  *Var1  ==  00000001
  41C:  		Goto  0
  428:  	EndIf
  430:  	Call  MakeLerp  ( 00000004 FFFFFFF6 00000028 .Easing:CosInOut )
  44C:  	Label  1
  458:  	Call  UpdateLerp ( )
  464:  	Call  TranslateModel    ( ~Model:hos_bt02:o376 00000000 *Var0 00000000 )
  480:  	Call  TranslateModel    ( ~Model:hos_bt02:o375 00000000 *Var0 00000000 )
  49C:  	Mul   *Var0  FFFFFFFD
  4AC:  	Call  RotateModel       ( ~Model:hos_bt02:o376 *VarA 00000000 00000000 00000001 )
  4CC:  	Add   *VarA  FFFFFFFD
  4DC:  	Call  ClampAngleFloat   ( *VarA )
  4EC:  	Wait  1`
  4F8:  	If  *Var1  ==  00000001
  508:  		Goto  1
  514:  	EndIf
  51C:  	Goto  2
  528:  EndThread
  530:  Return
  538:  End
}

#new:Script $Script_AfterBattle_80225E20
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80225E30
{
	$ASCII_80226078  % hos_tex
	$ASCII_80226068  % hos_bt02_shape
	$ASCII_80226058  % hos_bt02_hit
	$Script_BeforeBattle_802258E0
	$Script_AfterBattle_80225E20
	$ASCII_80226050  % nok_bg
	00000000
	00000000
	00000000
	00000000
}

#new:Formation $Formation_00
{
	$04_GoombarioTutor1 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$04_Ember 00000001 0000000A 00000000 00000000 00000000 $ItemDropTable_Ember
	$04_Ember 00000002 00000009 00000000 00000000 00000000 $ItemDropTable_Ember
}

#new:Formation $Formation_02
{
	$04_Ember 00000000 0000000A 00000000 00000000 00000000 $ItemDropTable_Ember
	$04_Ember 00000001 00000009 00000000 00000000 00000000 $ItemDropTable_Ember
	$04_Ember 00000002 00000008 00000000 00000000 00000000 $ItemDropTable_Ember
}

#new:Formation $Formation_03
{
	$04_FlyingMagikoopa 00000005 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_802260B4 00000001 $Formation_00 $Stage_80225E30 00000000
	$SJIS_802260A8 00000002 $Formation_01 $Stage_802255B0 00000000
	$SJIS_8022609C 00000003 $Formation_02 $Stage_802255B0 00000000
	$SJIS_80226080 00000001 $Formation_03 $Stage_80225E30 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_802260DC $Stage_802258B8
	$ASCII_802260D4 $Stage_802255B0
	$ASCII_802260CC $Stage_80225E30
	00000000 00000000
}


% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FB0
{
	48.627451d
}

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FB8
{
	89.411765d
}

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FC0
{
	99.607843d
}

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FC8
{
	67.450980d
}

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FD0
{
	59.215686d
}

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FD8
{
	80.392157d
}

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FE0
{
	96.078431d
}

#new:ASCII $ASCII_80225FE8
{
	"hos_bg"
}

#new:ASCII $ASCII_80225FF0
{
	"hos_bt01_hit"
}

#new:ASCII $ASCII_80226000
{
	"hos_bt01_shape"
}

#new:ASCII $ASCII_80226010
{
	"hos_tex"
}



#new:ASCII $ASCII_80226020
{
	"nok_bg"
}

#new:ASCII $ASCII_80226028
{
	"nok_bt02_hit"
}

#new:ASCII $ASCII_80226038
{
	"nok_bt02_shape"
}

#new:ASCII $ASCII_80226048
{
	"nok_tex"
}

#new:ASCII $ASCII_80226050
{
	"nok_bg"
}

#new:ASCII $ASCII_80226058
{
	"hos_bt02_hit"
}

#new:ASCII $ASCII_80226068
{
	"hos_bt02_shape"
}

#new:ASCII $ASCII_80226078
{
	"hos_tex"
}

#new:SJIS $SJIS_80226080
{
	カメック（ＡＣヘルプご） % kamekku（ＡＣherupugo）
}

#new:SJIS $SJIS_8022609C
{
	エルモスx３ % erumosux3
}

#new:SJIS $SJIS_802260A8
{
	エルモスx２ % erumosux2
}

#new:SJIS $SJIS_802260B4
{
	クリオ（ＡＣヘルプ） % kurio（ＡＣherupu）
}

#new:ASCII $ASCII_802260CC
{
	"hos_02"
}

#new:ASCII $ASCII_802260D4
{
	"hos_01"
}

#new:ASCII $ASCII_802260DC
{
	"hos_00"
}
