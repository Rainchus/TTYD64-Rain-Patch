% unused badge

% Script File: Move_JumpCharge2.bscr
% Decoded from: 761920 to 763540 (Move_JumpCharge2)

% Origin: HEURISTIC
@ $Function_802A1000
{
	ADDIU     SP, SP, FFD8
	LIA       V1, 800DC070
	SW        RA, 20 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        V0, D8 (V1)
	COPY      S0, A0
	LWC1      F2, 1C (V0)
	LWC1      F12, 144 (V0)
	LWC1      F14, 148 (V0)
	LWC1      F4, 14C (V0)
	LWC1      F6, 18 (V0)
	LWC1      F0, 20 (V0)
	MFC1      A2, F4
	MFC1      A3, F6
	COPY      S1, V1
	SWC1      F2, 10 (SP)
	JAL       ~Func:dist3D
	SWC1      F0, 14 (SP)
	LIF       F2, 15.0
	NOP
	MUL.S     F0, F0, F2
	NOP
	LIF       F2, 100.0
	NOP
	DIV.S     F0, F0, F2
	TRUNC.W.S F8, F0
	MFC1      V0, F8
	NOP
	SW        V0, 84 (S0)
	SLTI      V0, V0, 15
	BNE       V0, R0, .o94
	ADDIU     V0, R0, 14
	SW        V0, 84 (S0)
	.o94
	LB        V0, 83 (S1)
	BEQ       V0, R0, .oB8
	NOP
	LW        V0, 84 (S0)
	SLTI      V0, V0, 6
	BEQ       V0, R0, .oCC
	ADDIU     V0, R0, 6
	BEQ       R0, R0, .oCC
	SW        V0, 84 (S0)
	.oB8
	LW        V0, 84 (S0)
	SLTI      V0, V0, C
	BEQ       V0, R0, .oCC
	ADDIU     V0, R0, C
	SW        V0, 84 (S0)
	.oCC
	LW        RA, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

@ $Function_802A10E4
{
	SW        R0, 84 (A0)
	LAB       V0, 800DC107
	SLTI      V0, V0, 63
	BNE       V0, R0, .o1C
	ADDIU     V0, R0, 1
	SW        V0, 84 (A0)
	.o1C
	JR        RA
	ADDIU     V0, R0, 2
}

/%@ $Function_802A1108
{
	ADDIU     SP, SP, FFD8
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S2, 20 (SP)
	SW        S0, 18 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	ADDIU     A0, R0, 2
	MTC1      S2, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A1, F2
	MTC1      S0, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A2, F2
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	LIF       F0, 1.0
	MFC1      A3, F2
	ADDIU     V1, R0, 3C
	SW        V1, 14 (SP)
	JAL       800718D0
	SWC1      F0, 10 (SP)
	LIA       A0, $End0
	LIA       S0, 800DC070
	SW        R0, 0 (A0)
	LB        V0, 97 (S0)
	LBU       V1, 97 (S0)
	BLEZ      V0, .oC4
	COPY      S1, S0
	ADDIU     V0, R0, 1
	SW        V0, 0 (A0)
	.oC4
	ADDIU     V0, V1, 3
	SB        V0, 97 (S0)
	SLL       V0, V0, 18
	SRA       V0, V0, 18
	SLTI      V0, V0, 64
	BNE       V0, R0, .oE8
	LUI       V1, EFFF
	ADDIU     V0, R0, 63
	SB        V0, 97 (S0)
	.oE8
	ORI       V1, V1, FFFF
	LW        A0, 0 (S1)
	LUI       A1, 2000
	SB        R0, 96 (S1)
	OR        A0, A0, A1
	AND       A0, A0, V1
	SW        A0, 0 (S1)
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}%/

@ $Function_802A1228
{
	ADDIU     SP, SP, FFB0
	SW        S2, 20 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S3, 24 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	ADDIU     A0, R0, 6
	ADDIU     S3, S3, A
	MTC1      S3, F26
	NOP
	CVT.S.W   F26, F26
	ADDIU     S1, S1, 12
	MTC1      S1, F24
	NOP
	CVT.S.W   F24, F24
	MTC1      S0, F20
	NOP
	CVT.S.W   F20, F20
	MOV.S     F22, F0
	MFC1      A1, F26
	MFC1      A2, F24
	MFC1      A3, F20
	ADDIU     V0, R0, 2D
	SWC1      F22, 10 (SP)
	JAL       800720B0
	SW        V0, 14 (SP)
	ADDIU     A0, R0, D
	MFC1      A1, F26
	MFC1      A2, F24
	MFC1      A3, F20
	ADDIU     V0, R0, 1E
	SWC1      F22, 10 (SP)
	JAL       80070BB0
	SW        V0, 14 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 50
}

/%@ $Function_802A133C
{
	LAW       V0, $End0
	BNEL      V0, R0, .o14
	ADDIU     V0, R0, 7
	ADDIU     V0, R0, 6
	.o14
	SW        V0, 84 (A0)
	JR        RA
	ADDIU     V0, R0, 2
}%/

% Origin: HEURISTIC
@ $???_802A1360
{
    00000009 00000003 00000009 00000003 00000009 00000003 00000008 00000003
    00000007 00000003 00000006 00000002 00000005 00000002 00000004 00000002
}

% Origin: HEURISTIC
@ $Script_802A13A0
{
    Call  SetAnimation  ( .Actor:Player 00000000 00010006 )
    Loop  00000005
        Call  CheckButtonPress  ( ~Flags:Buttons:A *Var0 )
        If  *Var0  ==  .True
            BreakLoop
        EndIf
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A141C
{
    Call  SetGoalToFirstTarget  ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Sub   *Var0  00000028
    Call  InitTargetIterator ( )
    Call  SetGoalToTarget   ( .Actor:Player )
    Call  GetGoalPos        ( .Actor:Player *Var3 *Var4 *Var5 )
    Sub   *Var3  *Fixed[70.0]
    If  *Var0  <  *Var3
        Set   *Var3  *Var0
    EndIf
    Call  SetGoalPos    ( .Actor:Player *Var3 *Var4 *Var5 )
    Call  UseBattleCamPreset  ( 0000001A )
    Call  SetActorSpeed ( .Actor:Player *Fixed[5.0] )
    Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
    Call  CancelablePlayerRunToGoal ( 00000000 *Var0 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
    Call  SetGoalToTarget   ( .Actor:Player )
    ExecWait  $Script_802A13A0
    Call  SetAnimation  ( .Actor:Player 00000000 00010006 )
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A1590
{
    Call  SetGoalToTarget   ( .Actor:Player )
    Call  GetGoalPos        ( .Actor:Player *Var6 *Var7 *Var8 )
    Call  GetActorPos       ( .Actor:Player *Var7 *Var8 *Var9 )
    If  *Var6  >  *Var7
        Sub   *Var6  *Var7
    Else
        Sub   *Var7  *Var6
        Set   *Var6  *Var7
    EndIf
    Sub   *Var6  00000014
    DivF  *Var6  *Fixed[10.588867]
    AddF  *Var6  0000000F
    Set   *VarA  *Var6
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A1678
{
    Call  SetGoalToTarget   ( .Actor:Player )
    Call  GetGoalPos        ( .Actor:Player *Var6 *Var7 *Var8 )
    Call  GetActorPos       ( .Actor:Player *Var7 *Var8 *Var9 )
    If  *Var6  >  *Var7
        Sub   *Var6  *Var7
    Else
        Sub   *Var7  *Var6
        Set   *Var6  *Var7
    EndIf
    Sub   *Var6  00000014
    DivF  *Var6  *Fixed[22.5]
    AddF  *Var6  0000000F
    Set   *VarA  *Var6
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A1760
{
    Call  SetGoalToTarget   ( .Actor:Player )
    Call  GetGoalPos        ( .Actor:Player *Var6 *Var7 *Var8 )
    Call  GetActorPos       ( .Actor:Player *Var7 *Var8 *Var9 )
    If  *Var6  >  *Var7
        Sub   *Var6  *Var7
    Else
        Sub   *Var7  *Var6
        Set   *Var6  *Var7
    EndIf
    Sub   *Var6  00000014
    DivF  *Var6  *Fixed[18.0]
    AddF  *Var6  00000016
    Set   *VarA  *Var6
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A1848
{
    Call  80276EFC ( )
    Call  SetBattleFlagBits ( 00000100 .False )
    Call  UseBattleCamPreset  ( 00000003 )
    Call  802693F0 ( )
    Call  SetGoalToHome ( .Actor:Player )
    Call  GetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
    Add   *Var0  00000028
    Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
    Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.3] )
    Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
    Call  $Function_802A1000 ( )
    Call  80273444      ( *Var0 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
    Wait  1`
    Call  AddGoalPos    ( .Actor:Player FFFFFFEC 00000000 00000000 )
    Call  80273444      ( 00000006 00000000 00000002 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
    Wait  5`
    Call  EnablePlayerBlur  ( FFFFFFFF )
    Call  SetGoalToHome ( .Actor:Player )
    Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
    Call  PlayerRunToGoal   ( 00000000 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A1A34
{
    Call  80276EFC ( )
    Call  SetBattleFlagBits ( 00000100 .False )
    Call  UseBattleCamPreset  ( 00000003 )
    Call  802693F0 ( )
    Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
    Sub   *Var0  00000032
    Set   *Var1  00000000
    Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
    Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
    Call  SetActorJumpGravity   ( .Actor:Player *Fixed[0.8] )
    Call  $Function_802A1000 ( )
    Call  80273444      ( *Var0 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
    Wait  1`
    Call  AddGoalPos    ( .Actor:Player FFFFFFE2 00000000 00000000 )
    Call  80273444      ( 00000006 00000000 00000002 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
    Wait  2`
    Call  EnablePlayerBlur  ( FFFFFFFF )
    Call  SetGoalToHome ( .Actor:Player )
    Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
    Call  PlayerRunToGoal   ( 00000000 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A1C20
{
    Call  80276EFC ( )
    Call  SetBattleFlagBits ( 00000100 .False )
    Call  UseBattleCamPreset  ( 0000001D )
    Call  802693F0 ( )
    Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
    Sub   *Var0  00000028
    Set   *Var1  00000000
    Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
    Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
    Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.0] )
    Call  $Function_802A1000 ( )
    Call  80273444      ( *Var0 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
    Wait  1`
    Call  AddGoalPos    ( .Actor:Player FFFFFFEC 00000000 00000000 )
    Call  80273444      ( 00000006 00000000 00000002 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
    Wait  2`
    Call  EnablePlayerBlur  ( FFFFFFFF )
    Call  SetGoalToHome ( .Actor:Player )
    Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
    Call  PlayerRunToGoal   ( 00000000 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A1E0C
{
    Call  80276EFC ( )
    Call  SetBattleFlagBits ( 00000100 .False )
    Call  UseBattleCamPreset  ( 00000003 )
    Call  802693F0 ( )
    Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
    Sub   *Var0  0000003C
    Set   *Var1  00000000
    Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
    Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
    Call  SetActorJumpGravity   ( .Actor:Player *Fixed[0.8] )
    Call  $Function_802A1000 ( )
    Call  80273444      ( *Var0 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
    Wait  1`
    Call  AddGoalPos    ( .Actor:Player FFFFFFEC 00000000 00000000 )
    Call  80273444      ( 00000006 00000000 00000002 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
    Wait  2`
    Call  EnablePlayerBlur  ( FFFFFFFF )
    Call  SetGoalToHome ( .Actor:Player )
    Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
    Call  PlayerRunToGoal   ( 00000000 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A1FF8
{
    Call  80276EFC ( )
    Call  SetBattleFlagBits ( 00000100 .False )
    Call  EnablePlayerBlur  ( FFFFFFFF )
    Call  UseBattleCamPreset      ( 00000003 )
    Call  802693F0 ( )
    Call  SetGoalToHome     ( .Actor:Player )
    Call  GetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
    Add   *Var0  0000003C
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
    Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.0] )
    Call  SetJumpAnimations ( .Actor:Player 00000000 00010017 00010017 00010009 )
    Call  $Function_802A1000 ( )
    Call  80273444  ( *Var0 00000000 00000000 )
    ChildThread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[1.0] )
    EndChildThread
    Call  AddGoalPos    ( .Actor:Player FFFFFFE2 00000000 00000000 )
    Call  80273444      ( 00000008 00000000 00000002 )
    ChildThread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[1.0] )
    EndChildThread
    Call  AddGoalPos    ( .Actor:Player FFFFFFEC 00000000 00000000 )
    Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
    Call  80273444      ( 00000006 00000000 00000002 )
    ChildThread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[1.0] )
    EndChildThread
    Call  SetGoalToHome ( .Actor:Player )
    Call  80273444      ( 00000004 00000000 00000002 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A225C
{
    Call  SetJumpAnimations ( .Actor:Player 00000000 00000000 00000000 0001000C )
    Call  PlayerLandJump ( )
    Call  SetAnimation      ( .Actor:Player 00000000 0001000C )
    Wait  2`
    ChildThread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[1.0] )
    EndChildThread
    Call  PlaySoundAtActor  ( .Actor:Player 00000162 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010030 )
    Wait  10`
    Call  SetAnimation  ( .Actor:Player 00000000 00010031 )
    Wait  20`
    Call  SetBattleFlagBits ( 00000100 .False )
    Call  UseBattleCamPreset  ( 00000003 )
    Call  802693F0 ( )
    Call  EnablePlayerBlur  ( FFFFFFFF )
    Call  80276EFC ( )
    Call  SetGoalToHome ( .Actor:Player )
    Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
    Call  PlayerRunToGoal   ( 00000000 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A23F4
{
    Call  LoadActionCommand ( 00000001 )
    Call  802A9000 ( )
    ExecWait  $Script_802A141C
    ExecWait  $Script_802A1590
    Call  802A9120  ( *VarA 00000003 )
    Call  UseBattleCamPreset      ( 00000022 )
    Call  SetGoalToTarget   ( .Actor:Player )
    Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00030000 )
    Call  80274A18  ( *VarA 00000000 )
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A24A0
{
    Call  LoadActionCommand ( 00000001 )
    Call  802A9000 ( )
    ExecWait  $Script_802A141C
    Call  InitTargetIterator ( )
    ExecWait  $Script_802A1678
    Set   *VarB  *VarA
    Add   *VarB  0000000E
    Add   *VarB  FFFFFFFD
    Call  802A9120  ( *VarB 00000003 )
    Call  UseBattleCamPreset      ( 00000025 )
    Call  SetGoalToTarget   ( .Actor:Player )
    Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 0001000A 0001000B )
    Call  802752AC  ( *VarA 00000000 )
    Wait  7`
    Call  DidActionSucceed  ( *Var0 )
    Switch  *Var0
        Case  >  .False
            Call  802752AC  ( 00000003 00000001 )
        Default
            Call  802752AC  ( 00000005 00000001 )
    EndSwitch
    Return
    End
}

% Origin: HEURISTIC
@ $Script_802A25F4
{
    Call  LoadActionCommand ( 00000001 )
    Call  802A9000 ( )
    ExecWait  $Script_802A141C
    ExecWait  $Script_802A1760
    Call  8026919C  ( $???_802A1360 )
    Set   *VarB  *VarA
    Sub   *VarB  00000004
    Add   *VarB  FFFFFFFD
    Call  802A9120  ( *VarB 00000003 )
    Call  UseBattleCamPreset      ( 00000026 )
    Call  SetGoalToTarget   ( .Actor:Player )
    Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00080000 00030000 )
    Call  80275F00  ( *VarA 00000000 )
    Call  CloseActionCommandInfo ( )
    Set   *Var9  00000000
    Call  DidActionSucceed  ( *Var0 )
    If  *Var0  >  .False
        Set   *Var9  00000001
        Call  SetAnimation      ( .Actor:Player 00000000 00030000 )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
        Wait  2`
        Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
        Call  LoadActionCommand ( 00000001 )
        Call  802A9000 ( )
        Call  802A9120  ( 0000000D 00000003 )
        Call  UseBattleCamPreset      ( 00000027 )
        Call  80275F00  ( 0000000F 00000002 )
        Goto  A
    Else
        Call  LoadActionCommand ( 00000001 )
        Call  802A9000 ( )
        Call  802A9120  ( 00000002 00000003 )
        Call  80275F00  ( 00000004 00000001 )
        Goto  A
    EndIf
    Label  A
    Return
    End
}

@ $Script_UseMove1
{
    Return
    End
}

@ $Script_UseMove0
{
    Exec  $Script_RestartTrackerData 0
    Wait  10`
    ChildThread
        Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
        Wait  8`
        Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
        Wait  8`
    EndChildThread
    Call  SetAnimation      ( .Actor:Player 00000000 00010020 )
    Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
    Call  $Function_802A1228    ( *Var0 *Var1 *Var2 *Fixed[1.2] )
    Wait  3`
    Call  $Function_802A1228    ( *Var0 *Var1 *Var2 *Fixed[0.8] )
    Wait  30`
    Exec  $Script_DoStylish 0
    Call  MoveBattleCamOver ( 00000005 )
    Call  $Function_802A10E4 ( )
    If  *Var0  ==  00000000
        Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
        Add   *Var0  0000000A
        Add   *Var1  00000019
        Add   *Var2  00000005
        Call  $Function_802A1108        ( *Var0 *Var1 *Var2 )
        Call  PlaySoundAtActor  ( .Actor:Player 0000208F )
        ExecWait  $Script_DoStylish2
    Else
        Call  ShowMessageBox    ( 00000008 0000003C )
    EndIf
    Label  0
    Wait  1`
    Call  IsMessageBoxDisplayed ( *Var0 )
    If  *Var0  ==  .True
        Goto  0
    EndIf
    Call  SetGoalToHome ( .Actor:Player )
    Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
    Call  PlayerRunToGoal   ( 00000000 )
    Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
    Return
    End
}

#new:Script $Script_RestartTrackerData
{
Call  UseBattleCamPreset  ( 00000020 ) % restore vanilla code
Exec $Script_NukeTracker
Return
End
}

#new:Script $Script_DoStylish
{
    Call  UseBattleCamPreset      ( 00000002 ) % restore vanilla code
    % Init A tracker
    Exec $Script_InitTracker
    % if the player press A in the next frames the stylish will be locked
    Wait 5
    % Check if the A button was pressed too soon
    Call $ReadAddress ( $Data_Inputs 0 *Var0 .False .False )
    If *Var0 == .True
        Set *TrackInput .False
        Call $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
        Return
    EndIf
    % TRACK A - RIGHT TIME TO PRESS THE BUTTON
    Loop 2 % 2 frames
        % Timing Tutor Badge
        ExecWait $Script_TimingTutor % writes in var0,1,2
        Call $ReadAddress ( $Data_Inputs 0 *Var0 .False .False )
        If *Var0 == .True
            % Disable Tracker
            Set *TrackInput .False
            Call $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
            % Add 1 to the stylish counter (last move only)
            Call $ReadAddress  ( $Data_Inputs 0 *Var0 2 .False )
            Add *Var0 1
            Call $WriteAddress ( $Data_Inputs 0 *Var0 2 .False )
            Call $WriteAddress ( 8029FC40 0 0 .False .False ) % restard current action command bool, so the game ignores you pressed A when doing the stylish
            Set *VarA .False % this move doesn't have an SP cap
            ExecWait $Script_DoStylishFX
            % Rotate Mario
            SetTimescale *Fixed[3.0]
            Loop 3
                % 1
                Call    MakeLerp    	( 0 -180` 3 .Easing:Linear )
                Loop     
                    Call     UpdateLerp
                    Call     SetActorRotation  ( .Actor:Player 0 *Var0 0 )
                    Wait     1
                    If  *Var1  ==  .False
                        BreakLoop
                    EndIf
                EndLoop
                % 2
                Call    MakeLerp    	( -180` 0 3 0 )
                Loop     
                    Call     UpdateLerp
                    Call     SetActorRotation  ( .Actor:Player 0 *Var0 0 )
                    Wait     1
                    If  *Var1  ==  .False
                        BreakLoop
                    EndIf
                EndLoop
            EndLoop
            SetTimescale *Fixed[1.0]
            Call    SetActorRotation  ( .Actor:Player 0 0 0 )
            Return
        EndIf
        Wait 1
    EndLoop
    Set *TrackInput .False
    Call $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
    Return
    End
}

#new:Script $Script_DoStylish2 % 2nd stylish move
{
    % restore vanilla code
    Wait  4`
    Call  PlaySoundAtActor  ( .Actor:Player 00000160 )
    Call  SetActorJumpGravity       ( .Actor:Player *Fixed[1.0] )
    Call  SetActorSpeed     ( .Actor:Player *Fixed[1.0] )
    Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
    Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
    Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
    % Init A Tracker
    Thread
        Wait 8
        Exec $Script_InitTracker % Start tracking the A button
        % Check if the player pressed A too soon
        Loop 5 % 5 frames
            Call $ReadAddress ( $Data_Inputs 0 *Var0 .False .False )
            If *Var0 == .True % If was pressed to soon end the tread, set the A button bool as false and turn off the tracker
                Set *TrackInput .False
                Call $WriteAddress ( $Data_Inputs 0 0 .False .False )
                Goto EndThread1
            EndIf
            Wait 1
        EndLoop
        % Right time to press A to do the next stylish move
        Loop 2 % 2 frames
            % Timing Tutor Badge
            ExecWait $Script_TimingTutor % writes in var0,1,2
            Call $ReadAddress ( $Data_Inputs 0 *Var0 .False .False )
            Wait 1
        EndLoop
        Label EndThread1
    EndThread
    Call  80273444  ( 00000014 00000000 00000000 )
    %===================
    Label DoStylish2 % 2nd Stylish Move
    Call $ReadAddress ( $Data_Inputs 0 *Var0 .False .False )
    If *Var0 == .False % A pressed too soon
        Wait 1
        Goto End
    EndIf
    %Set *Var0 .True % testing
    If *Var0 == .True
        % Add 1 to the stylish counter (last move only)
        Call $ReadAddress  ( $Data_Inputs 0 *Var0 2 .False )
        Add *Var0 1
        Call $WriteAddress ( $Data_Inputs 0 *Var0 2 .False )
        Call $WriteAddress ( 8029FC40 0 0 .False .False ) % restard current action command bool, so the game ignores you pressed A when doing the stylish
        Set *VarA .False % this move doesn't have an SP cap
        ExecWait $Script_DoStylishFX
        Call  SetAnimation  ( .Actor:Player 00000000 .PlayerAnim:ThumbsUp )
        Wait  20`
    EndIf
    Label End
    Set   *TrackInput .False
    Call  $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
    % vanilla stuff
    Call  SetAnimation      ( .Actor:Player 00000000 00010009 )
    Call  $Function_802A133C ( )
    Call  ShowVariableMessageBox    ( *Var0 0000003C 00000003 )
    Return
    End
}
