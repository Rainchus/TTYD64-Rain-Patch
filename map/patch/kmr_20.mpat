@ $Script_8024FD70
{
%Exec    $Script_Demo_Chpt3
%Exec    $Script_Demo_Chpt5
ExecWait $Script_8024FD70_2 % start the game normally
/%Exec    $Script_TestingBuild
Call    GotoMap ( "mac_01" 1 )%/
Return
End
}

% same as the original script? I don't remember why i did this, but i don't want to break anything
#new:Script $Script_8024FD70_2
{
    0:  Call  DisablePlayerInput    ( .True )
   10:  Thread
   18:  	Wait  5`
   24:  	Call  SetMusicTrack ( 00000000 .Song:MailCall 00000000 00000008 )
   40:  EndThread
   48:  Call  InterpPlayerYaw   (  90`  0` )
   5C:  Call  SetPlayerPos  (  -50`  30`  -80` )
   74:  Call  SetNpcPos     ( 00000001  220`  30`  -80` )
   90:  Call  SetNpcPos     ( 00000000  720`  220`  -150` )
   AC:  Call  SetNpcYaw     ( 00000000  270` )
   C0:  Call  EnableGroup   ( ~Model:g94 .False )
   D4:  Call  EnableGroup   ( ~Model:g100 .True )
   E8:  Call  UseSettingsFrom   ( .Cam:Default  550`  0`  20` )
  104:  Call  SetPanTarget  ( .Cam:Default  550`  0`  20` )
  120:  Call  SetCamDistance    ( .Cam:Default  550` )
  134:  Call  SetCamPitch   ( .Cam:Default *Fixed[15.0] *Fixed[-14.0] )
  14C:  Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
  160:  Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
  178:  Wait  1`
  184:  Call  SetCamDistance    ( .Cam:Default  450` )
  198:  Call  SetCamSpeed   ( .Cam:Default *Fixed[0.7] )
  1AC:  Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
  1C4:  Thread
  1CC:  	Wait  10`
  1D8:  	Call  MakeLerp  ( 00000000 00000046 0000003C .Easing:Linear )
  1F4:  	Loop
  200:  		Call  UpdateLerp ( )
  20C:  		Call  TranslateGroup    ( ~Model:g108 *Var0 00000000 00000000 )
  228:  		SetF  *Var2  00000000
  238:  		SubF  *Var2  *Var0
  248:  		Call  TranslateGroup    ( ~Model:g106 *Var2 00000000 00000000 )
  264:  		If  *Var1  ==  00000000
  274:  			BreakLoop
  27C:  		EndIf
  284:  		Wait  1`
  290:  	EndLoop
  298:  EndThread
  2A0:  Thread
  2A8:  	Wait  30`
  2B4:  	Call  MakeLerp  ( 00000000 00000032 00000028 .Easing:Linear )
  2D0:  	Loop
  2DC:  		Call  UpdateLerp ( )
  2E8:  		Call  TranslateGroup    ( ~Model:g109 *Var0 00000000 00000000 )
  304:  		SetF  *Var2  00000000
  314:  		SubF  *Var2  *Var0
  324:  		Call  TranslateGroup    ( ~Model:g107 *Var2 00000000 00000000 )
  340:  		If  *Var1  ==  00000000
  350:  			BreakLoop
  358:  		EndIf
  360:  		Wait  1`
  36C:  	EndLoop
  374:  EndThread
  37C:  Thread
  384:  	Wait  50`
  390:  	Call  MakeLerp  ( 00000000 00000032 00000028 .Easing:Linear )
  3AC:  	Loop
  3B8:  		Call  UpdateLerp ( )
  3C4:  		Call  TranslateGroup    ( ~Model:g105 *Var0 00000000 00000000 )
  3E0:  		Call  TranslateGroup    ( ~Model:g102 *Var0 00000000 00000000 )
  3FC:  		SetF  *Var2  00000000
  40C:  		SubF  *Var2  *Var0
  41C:  		Call  TranslateGroup    ( ~Model:g103 *Var2 00000000 00000000 )
  438:  		Call  TranslateGroup    ( ~Model:g104 *Var2 00000000 00000000 )
  454:  		Call  TranslateGroup    ( ~Model:g101 *Var2 00000000 00000000 )
  470:  		If  *Var1  ==  00000000
  480:  			BreakLoop
  488:  		EndIf
  490:  		Wait  1`
  49C:  	EndLoop
  4A4:  EndThread
  4AC:  Wait  120`
  4B8:  Call  NpcFlyTo  ( 00000000  430`  20`  -165`  60`  -10` .Easing:Linear )
  4E0:  Call  InterpNpcYaw      ( 00000000  45`  10` )
  4F8:  Wait  20`
  504:  Call  PlaySoundAtNpc    ( 00000000 000000E0 00000000 )
  51C:  Thread
  524:  	Call  TranslateModel    ( ~Model:o222 00000002 00000000 00000000 )
  540:  	Call  TranslateModel    ( ~Model:o223 00000002 00000000 00000000 )
  55C:  	Call  TranslateModel    ( ~Model:o224 00000002 00000000 00000000 )
  578:  	Wait  1`
  584:  	Call  TranslateModel    ( ~Model:o222 FFFFFFFD 00000000 00000000 )
  5A0:  	Call  TranslateModel    ( ~Model:o223 FFFFFFFD 00000000 00000000 )
  5BC:  	Call  TranslateModel    ( ~Model:o224 FFFFFFFD 00000000 00000000 )
  5D8:  	Wait  1`
  5E4:  	Call  TranslateModel    ( ~Model:o222 00000002 00000000 00000000 )
  600:  	Call  TranslateModel    ( ~Model:o223 00000002 00000000 00000000 )
  61C:  	Call  TranslateModel    ( ~Model:o224 00000002 00000000 00000000 )
  638:  	Wait  1`
  644:  	Call  TranslateModel    ( ~Model:o222 FFFFFFFD 00000000 00000000 )
  660:  	Call  TranslateModel    ( ~Model:o223 FFFFFFFD 00000000 00000000 )
  67C:  	Call  TranslateModel    ( ~Model:o224 FFFFFFFD 00000000 00000000 )
  698:  	Wait  1`
  6A4:  	Call  TranslateModel    ( ~Model:o222 00000000 00000000 00000000 )
  6C0:  	Call  TranslateModel    ( ~Model:o223 00000000 00000000 00000000 )
  6DC:  	Call  TranslateModel    ( ~Model:o224 00000000 00000000 00000000 )
  6F8:  EndThread
  700:  Wait  35`
  70C:  Call  InterpNpcYaw  ( 00000000  220`  5` )
  724:  Wait  10`
  730:  Call  SpeakToPlayer ( 00000000 00040006 00040001 00000005 0000001E ) % Mail call!
  750:  Wait  10`
  75C:  Call  NpcFlyTo      ( 00000000  360`  260`  60`  60`  -10` .Easing:Linear )
  784:  Wait  30`
  790:  Exec  $Script_8024FCE4
  79C:  Wait  10`
  7A8:  Call  SetNpcAnimation   ( 00000001 0082000A )
  7BC:  Exec  $Script_8024F5A4 *VarA
  7CC:  Call  SetNpcSpeed   ( 00000001 *Fixed[4.0] )
  7E0:  Call  NpcMoveTo     ( 00000001  450`  -80`  0` )
  7FC:  Call  NpcMoveTo     ( 00000001  430`  -165`  0` )
  818:  Call  SetNpcAnimation   ( 00000001 00820004 )
  82C:  Kill  *VarA
  838:  Wait  20`
  844:  Call  PlaySoundAtNpc    ( 00000001 000000E0 00000000 )
  85C:  Thread
  864:  	Call  TranslateModel    ( ~Model:o222 00000001 00000000 00000000 )
  880:  	Call  TranslateModel    ( ~Model:o223 00000001 00000000 00000000 )
  89C:  	Call  TranslateModel    ( ~Model:o224 00000001 00000000 00000000 )
  8B8:  	Wait  1`
  8C4:  	Call  TranslateModel    ( ~Model:o222 FFFFFFFE 00000000 00000000 )
  8E0:  	Call  TranslateModel    ( ~Model:o223 FFFFFFFE 00000000 00000000 )
  8FC:  	Call  TranslateModel    ( ~Model:o224 FFFFFFFE 00000000 00000000 )
  918:  	Wait  1`
  924:  	Call  TranslateModel    ( ~Model:o222 00000001 00000000 00000000 )
  940:  	Call  TranslateModel    ( ~Model:o223 00000001 00000000 00000000 )
  95C:  	Call  TranslateModel    ( ~Model:o224 00000001 00000000 00000000 )
  978:  	Wait  1`
  984:  	Call  TranslateModel    ( ~Model:o222 FFFFFFFE 00000000 00000000 )
  9A0:  	Call  TranslateModel    ( ~Model:o223 FFFFFFFE 00000000 00000000 )
  9BC:  	Call  TranslateModel    ( ~Model:o224 FFFFFFFE 00000000 00000000 )
  9D8:  	Wait  1`
  9E4:  	Call  TranslateModel    ( ~Model:o222 00000000 00000000 00000000 )
  A00:  	Call  TranslateModel    ( ~Model:o223 00000000 00000000 00000000 )
  A1C:  	Call  TranslateModel    ( ~Model:o224 00000000 00000000 00000000 )
  A38:  EndThread
  A40:  Wait  2`
  A4C:  Call  SetNpcAnimation   ( 00000001 00820005 )
  A60:  Wait  40`
  A6C:  Call  InterpNpcYaw  ( 00000001  270`  5` )
  A84:  Call  SetNpcAnimation   ( 00000001 0082000B )
  A98:  Exec  $Script_8024F5A4 *VarA
  AA8:  Call  NpcMoveTo     ( 00000001  450`  -80`  0` )
  AC4:  Call  NpcMoveTo     ( 00000001  290`  -70`  0` )
  AE0:  Kill  *VarA
  AEC:  Call  EnableGroup   ( ~Model:g20 .True )
  B00:  Call  EnableGroup   ( ~Model:g21 .True )
  B14:  Call  EnableGroup   ( ~Model:g49 .True )
  B28:  Call  EnableModel   ( ~Model:g56 .True )
  B3C:  Call  $Function_80241C9C ( )
  B48:  Call  RotateGroup   ( ~Model:g60 0000005A 00000001 00000000 00000000 )
  B68:  Call  RotateGroup   ( ~Model:g34 0000005A FFFFFFFF 00000000 00000000 )
  B88:  Call  EnableGroup   ( ~Model:g60 .False )
  B9C:  Call  EnableGroup   ( ~Model:g34 .False )
  BB0:  Call  UseSettingsFrom   ( .Cam:Default  250`  30`  -80` )
  BCC:  Call  SetPanTarget  ( .Cam:Default  250`  30`  -80` )
  BE8:  Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
  BFC:  Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
  C14:  Call  $Function_80241D1C ( )
  C20:  Exec  $Script_8024FB88
  C2C:  Wait  10`
  C38:  Call  SetNpcAnimation   ( 00000001 00820009 )
  C4C:  Exec  $Script_8024F5A4 *VarA
  C5C:  Call  SetNpcSpeed   ( 00000001 *Fixed[2.0] )
  C70:  Call  NpcMoveTo     ( 00000001  240`  -80`  0` )
  C8C:  Call  SetNpcAnimation   ( 00000001 00820005 )
  CA0:  Kill  *VarA
  CAC:  Call  SpeakToPlayer ( 00000001 00820015 00820005 00000000 0000001F ) % Hey, Mario! We got a letter from Princess Peach!
  CCC:  Wait  10`
  CD8:  Exec  $Script_8024FAAC
  CE4:  Thread
  CEC:  	Call  SetNpcAnimation   ( 00000001 00820009 )
  D00:  	Exec  $Script_8024F5A4 *VarA
  D10:  	Call  NpcMoveTo ( 00000001  230`  -130`  0` )
  D2C:  	Call  NpcMoveTo ( 00000001  110`  -110`  0` )
  D48:  	Call  SetNpcAnimation   ( 00000001 00820005 )
  D5C:  	Kill  *VarA
  D68:  	Call  SetNpcVar ( 00000001 00000000 00000000 )
  D80:  EndThread
  D88:  Wait  20`
  D94:  Call  802D1270  ( 00000046 FFFFFFB0 *Fixed[2.0] )
  DAC:  Call  802D1270  ( 00000046 FFFFFF92 *Fixed[2.0] )
  DC4:  Wait  10`
  DD0:  Call  SpeakToPlayer     ( 00000001 00820015 00820005 00000000 00000020 ) % I'll read it to you, OK?
  DF0:  Call  SetNpcAnimation   ( 00000001 00820018 )
  E04:  Wait  20`
  E10:  Call  SetNpcAnimation   ( 00000001 00820006 )
  E24:  Call  SpeakToPlayer     ( 00000001 00820016 00820006 00000000 00000021 ) % All right, let's see...
  E44:  Call  SetNpcAnimation   ( 00000001 00820019 )
  E58:  Wait  10`
  E64:  Call  SetMusicTrack     ( 00000000 .Song:PrisonerPeachTheme 00000000 00000008 )
  E80:  Wait  5`
  E8C:  Call  ClearAmbientSounds    ( 000000FA )
  E9C:  Call  GotoMapSpecial    ( $ASCII_80253008 00000003 00000007 ) % osr_00
  EB4:  Wait  15`
  EC0:  Call  ClearAmbientSounds    ( 000000FA )
  ED0:  Wait  100`
  EDC:  Return
  EE4:  End
}

#new:Script $Script_TestingBuild
{
    Call    $WriteAddress ( 8010F290 0 2 0 .False ) % Get Ultra Boots
    Call    $WriteAddress ( 8010F290 0 2 1 .False ) % Get Ultra Hammer
    Call    $WriteAddress ( 8010F2AC 0 1 .False .False ) % Unlock goombario
    Call    $WriteAddress ( 8010F2A2 0 .Partner:Goombario .False .False ) % Appear with goombario as a partner
    Set     *GB_StoryProgress .Story:Ch8_ReachedPeachsCastle
    Return
    End
}

#new:Script $Script_Demo_Chpt3
{
    % Set stats
    %
    % Partners
    Set     *Var0 8010F2AC % partners' data
    Call    $WriteAddress ( *Var0 0 .True 0 .False ) % Goombario Unlocked
    Call    $WriteAddress ( *Var0 0 .True 1 .False ) % Rank
    Call    $RaisePartnerMaxHP ( .Partner:Goombario )
    Add     *Var0 8
    Call    $WriteAddress ( *Var0 0 .True 0 .False ) % Kooper unlocked
    Call    $WriteAddress ( *Var0 0 .True 1 .False ) % Rank
    Call    $RaisePartnerMaxHP ( .Partner:Kooper )
    Add     *Var0 8
    Call    $WriteAddress ( *Var0 0 .True 0 .False ) % Bombette unlocked
    Call    $WriteAddress ( *Var0 0 .True 1 .False ) % Rank
    Call    $RaisePartnerMaxHP ( .Partner:Bombette )
    Add     *Var0 8
    Call    $WriteAddress ( *Var0 0 .True 0 .False ) % Parakarry unlocked
    Call    $WriteAddress ( *Var0 0 .True 1 .False ) % Rank
    Call    $RaisePartnerMaxHP ( .Partner:Parakarry )
    Call    $WriteAddress ( 8010F2A2 0 .Partner:Goombario .False .False ) % Appear with goombario
    %=========
    % Mario
    %=========
    Set     *Var0 8010F290 % PlayerData
    Call    $WriteAddress ( *Var0 0 1 1 .False ) % Hammer
    Call    $WriteAddress ( *Var0 0 15` 2 .False ) % HP
    Call    $WriteAddress ( *Var0 0 15` 3 .False ) % Max HP
    Call    $WriteAddress ( *Var0 0 15` 4 .False ) % Hard Max HP
    Call    $WriteAddress ( *Var0 0 15` 5 .False ) % FP
    Call    $WriteAddress ( *Var0 0 15` 6 .False ) % Max FP
    Call    $WriteAddress ( *Var0 0 15` 7 .False ) % Hard Max FP
    Call    $WriteAddress ( *Var0 0 12` 8 .False ) % Max BP
    Call    $WriteAddress ( *Var0 0 6 9 .False ) % Level
    Call    $WriteAddress ( *Var0 0 .True A .False ) % ActionCommands
    Call    $WriteAddress ( *Var0 1 50` C .False ) % coins
    Call    $WriteAddress ( *Var0 0 2 28E .False ) % star spirits
    Call    $WriteAddress ( *Var0 1 0200 290 .False ) % star power
    %=========
    % Badges
    %=========
    UseIntBuffer $BadgesTable_Demo_Chpt3
    Loop
        Get1Int *Var0
        If *Var0 == -1
            BreakLoop
        EndIf
        Call    AddBadge ( *Var0 .False )
    EndLoop
    Set     *GF_StartedChapter3  .True
    Set     *GB_StoryProgress .Story:Ch3_SawBooEnterForest
    Call    GotoMap ( "mim_10" 0  )
    Return
    End
}

#new:IntTable $BadgesTable_Demo_Chpt3
{
    .Item:PowerJump
    .Item:Multibounce
    .Item:SleepStomp
    .Item:DoubleDip
    .Item:QuickChange
    .Item:DodgeMaster
    .Item:PowerBounce
    .Item:PowerSmash1
    .Item:QuakeHammer
    .Item:HammerThrow
    .Item:PiercingBlow
    .Item:Peekaboo
    .Item:HappyHeartA
    .Item:HappyFlowerA
    .Item:HPPlusA
    .Item:FPPlusA
    .Item:DamageDodgeA
    .Item:PowerRush
    .Item:CloseCall
    .Item:PrettyLucky
    .Item:SpikeShield
    .Item:RunawayPay
    .Item:Refund
    .Item:PayOff
    .Item:ChillOut
    .Item:SpeedySpin
    .Item:DizzyAttack
    .Item:SpinAttack
    .Item:FirstAttack
    .Item:SlowGo
    .Item:AttackFXA
    .Item:AttackFXB
    .Item:AttackFXC
    .Item:AttackFXD
    FFFFFFFF
}

#new:Script $Script_Demo_Chpt5
{
    % Set stats
    %
    % Partners
    Set     *Var0 8010F2AC % partners' data
    Call    $WriteAddress ( *Var0 0 .True 0 .False ) % Gombario Unlocked
    Call    $WriteAddress ( *Var0 0 .True 1 .False ) % Rank
    Call    $RaisePartnerMaxHP ( .Partner:Goombario )
    Add     *Var0 8
    Call    $WriteAddress ( *Var0 0 .True 0 .False ) % Kooper unlocked
    Call    $WriteAddress ( *Var0 0 .True 1 .False ) % Rank
    Call    $RaisePartnerMaxHP ( .Partner:Kooper )
    Add     *Var0 8
    Call    $WriteAddress ( *Var0 0 .True 0 .False ) % Bombette unlocked
    Call    $WriteAddress ( *Var0 0 .True 1 .False ) % Rank
    Call    $RaisePartnerMaxHP ( .Partner:Bombette )
    Add     *Var0 8
    Call    $WriteAddress ( *Var0 0 .True 0 .False ) % Parakarry unlocked
    Call    $WriteAddress ( *Var0 0 .True 1 .False ) % Rank
    Call    $RaisePartnerMaxHP ( .Partner:Parakarry )
    Add     *Var0 16`
    Call    $WriteAddress ( *Var0 0 .True 0 .False ) % Watt unlocked
    Call    $WriteAddress ( *Var0 0 .True 1 .False ) % Rank
    Call    $RaisePartnerMaxHP ( .Partner:Watt )
    Add     *Var0 24`
    Call    $WriteAddress ( *Var0 0 .True 0 .False ) % Bow unlocked
    Call    $WriteAddress ( *Var0 0 .True 1 .False ) % Rank
    Call    $RaisePartnerMaxHP ( .Partner:Bow )
    Call    $WriteAddress ( 8010F2A2 0 .Partner:Goombario .False .False ) % Appear with goombario
    %=========
    % Mario
    %=========
    Set     *Var0 8010F290 % PlayerData
    Call    $WriteAddress ( *Var0 0 1 0 .False ) % Boots
    Call    $WriteAddress ( *Var0 0 1 1 .False ) % Hammer
    Call    $WriteAddress ( *Var0 0 20` 2 .False ) % HP
    Call    $WriteAddress ( *Var0 0 20` 3 .False ) % Max HP
    Call    $WriteAddress ( *Var0 0 20` 4 .False ) % Hard Max HP
    Call    $WriteAddress ( *Var0 0 15` 5 .False ) % FP
    Call    $WriteAddress ( *Var0 0 15` 6 .False ) % Max FP
    Call    $WriteAddress ( *Var0 0 15` 7 .False ) % Hard Max FP
    Call    $WriteAddress ( *Var0 0 24` 8 .False ) % Max BP
    Call    $WriteAddress ( *Var0 0 10` 9 .False ) % Level
    Call    $WriteAddress ( *Var0 0 .True A .False ) % ActionCommands
    Call    $WriteAddress ( *Var0 1 50` C .False ) % coins
    Call    $WriteAddress ( *Var0 0 4 28E .False ) % star spirits
    Call    $WriteAddress ( *Var0 1 0400 290 .False ) % star power
    %=========
    % Badges
    %=========
    UseIntBuffer $BadgesTable_Demo_Chpt5
    Loop
        Get1Int *Var0
        If *Var0 == -1
            BreakLoop
        EndIf
        Call    AddBadge ( *Var0 .False )
    EndLoop
    Set     *GF_StartedChapter5  .True
    Set     *GB_StoryProgress .Story:Ch5_DefeatedFuzzipede
    Call    GotoMap ( "jan_00" 0  )
    Return
    End
}

#new:IntTable $BadgesTable_Demo_Chpt5
{
    .Item:PowerJump
    .Item:Multibounce
    .Item:SleepStomp
    .Item:SoftStomp
    .Item:PowerBounce
    .Item:PowerSmash1
    .Item:SpinSmash
    .Item:QuakeHammer
    .Item:HammerThrow
    .Item:PiercingBlow
    .Item:DoubleDip
    .Item:QuickChange
    .Item:Peekaboo
    .Item:DodgeMaster
    .Item:HappyHeartA
    .Item:HappyFlowerA
    .Item:DeepFocus1
    .Item:DeepFocus1
    .Item:HPPlusA
    .Item:HPPlusA
    .Item:FPPlusA
    .Item:FPPlusA
    .Item:PowerPlusA
    .Item:DefendPlusA
    .Item:DamageDodgeA
    .Item:MegaRush
    .Item:LastStand
    .Item:PowerRush
    .Item:CloseCall
    .Item:PrettyLucky
    .Item:IcePower
    .Item:SpikeShield
    .Item:RunawayPay
    .Item:Refund
    .Item:PayOff
    .Item:ISpy
    .Item:ChillOut
    .Item:SpeedySpin
    .Item:DizzyAttack
    .Item:SpinAttack
    .Item:FirstAttack
    .Item:SlowGo
    .Item:AttackFXA
    .Item:AttackFXB
    .Item:AttackFXC
    .Item:AttackFXD
    FFFFFFFF
}

% Origin: HINT
@ $Function_GetRecordValues
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S3, 1C (SP)
    8:  COPY      S3, A0
    C:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   1C:  LA        V1, 8010F290
   24:  SW        RA, 20 (SP)
   28:  SW        S2, 18 (SP)

   JAL $GetValidBadgeFlagsSize
   NOP

   %loop count now in s1
   ADDU s1, v0, r0 %max loop count
   DADDU s2, r0, r0 %cur loop count
   DADDU s0, r0, r0 %found badges
    .foundBadgesLoop
    JAL $GetBadgeFlag
    ADDIU a0, s2, E0 %valid badge ids start at 0xE0

    BNEL v0, r0, .incrementFoundBadges
    ADDIU s0, s0, 1 %increment found badges
    .incrementFoundBadges
    ADDIU s2, s2, 1
    SLT t0, s2, s1
    BNE t0, r0, .foundBadgesLoop
    NOP
    SH s0, 0024 (s3) %new found badges


   4C:  CLEAR     S1
   50:  COPY      S0, S1
   54:  LA        S2, $DataTable_80252DC0
        .o5C
   5C:  LW        A1, 0 (S2)
   60:  BEQ       A1, R0, .o84
   64:  SLL       V0, S1, 10
   68:  JAL       ~Func:get_variable
   6C:  CLEAR     A0
   70:  BNEL      V0, R0, .o78
   74:  ADDIU     S1, S1, 1
        .o78
   78:  ADDIU     S2, S2, 4
   7C:  BEQ       R0, R0, .o5C
   80:  ADDIU     S0, S0, 1
        .o84
   84:  SH        S0, 28 (S3)
   88:  BNE       V0, R0, .oAC
   8C:  SH        S1, 26 (S3)
   90:  CLEAR     A0
   94:  LI        A1, *GF_MAC02_DiscoveredRecipe_12
   98:  JAL       ~Func:get_variable
   9C:  RESERVED
   A0:  BEQ       V0, R0, .oAC
   A4:  LI        V0, FFFF
   A8:  SH        V0, 26 (S3)
        .oAC
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  JR        RA
   C4:  ADDIU     SP, SP, 28
}

% Update total stats

%TODO: reimplement the changes needed here
% @ $Function_802421A0
% {
% 	[25C] ADDIU 	A0, R0, 141` % badges total, was 80`
% 	[318] ADDIU     A0, R0, 134` % star piece total, was 160`
%     [438] ADDIU     A0, R0, 92` % recipe total, was 50`
%     % remove "Chuck Quizmo" stat
%     [47C]  NOP % skip "???"
%     [4B8]  NOP % skip "Chuck Quizmo's Quizzes"
%     [4DC]  NOP % skip "X/0"
%     [4FC]  NOP % skip "/"
%     [520]  NOP % skip "0/X"
%     % adjust previous stats y pos
%     [548]  LI        A2, 6D % number of battles
%     [564]  LI        A2, 6E % amount
%     [5A8]  LI        A2, 7D % first strikes
%     [5C0]  LI        A2, 7E % amount
%     [5F8]  LI        A2, 8C % enemies first strikes
%     [610]  LI        A2, 8D % amount
%     [640]  LI        A2, 9D % ??? (total power bounces)
%     [674]  LI        A2, 9D % total power bounces
%     [68C]  LI        A2, 9D % amount
% }

@ $Function_802421A0
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S6, 40 (SP)
    8:  COPY      S6, A0
    C:  SW        S0, 28 (SP)
   10:  COPY      S0, A1
   14:  SW        RA, 44 (SP)
   18:  SW        S5, 3C (SP)
   1C:  SW        S4, 38 (SP)
   20:  SW        S3, 34 (SP)
   24:  SW        S2, 30 (SP)
   28:  BLEZ      S0, .o6A8
   2C:  SW        S1, 2C (SP)
   30:  LA        A0, 8009A66C
   38:  LUI       V0, DE00
   3C:  MTC1      S0, F0
   40:  NOP
   44:  CVT.D.W   F0, F0
   48:  LW        V1, 0 (A0)
   4C:  LAD       F2, $ConstDouble_80253030
   54:  COPY      A1, V1
   58:  ADDIU     V1, V1, 8
   5C:  SW        V1, 0 (A0)
   60:  SW        V0, 0 (A1)
   64:  LA        V0, $???_80252D50
   6C:  SW        V0, 4 (A1)
   70:  ADDIU     V0, V1, 8
   74:  SW        V0, 0 (A0)
   78:  LUI       V0, E700
   7C:  MUL.D     F0, F0, F2
   80:  NOP
   84:  SW        V0, 0 (V1)
   88:  ADDIU     V0, V1, 10
   8C:  SW        R0, 4 (V1)
   90:  SW        V0, 0 (A0)
   94:  LUI       V0, FA00
   98:  LIF       F3, 28.0
   A0:  MTC1      R0, F2
   A4:  ADDIU     T5, V1, C
   A8:  C.LE.D    F2, F0
   AC:  NOP
   B0:  BC1T      .oC8
   B4:  SW        V0, 8 (V1)
   B8:  TRUNC.W.D F4, F0
   BC:  MFC1      T4, F4
   C0:  BEQ       R0, R0, .oE4
   C4:  LUI       T1, 1078
        .oC8
   C8:  SUB.D     F0, F0, F2
   CC:  LUI       V0, 8000
   D0:  TRUNC.W.D F4, F0
   D4:  MFC1      T4, F4
   D8:  NOP
   DC:  OR        T4, T4, V0
   E0:  LI        T1, 1078
   .oE4
   E0:  ORI t1, t1, 1800
   %E8:  LI        T3, F647C300
   F0:  LI        T2, 000840AC
   F8:  LI        A0, 1E
   FC:  LI        A1, 28
  100:  LI        A2, 104
  104:  LA        T0, 8009A66C
  10C:  ANDI      V0, T4, FF
  110:  OR        V0, V0, T1
  114:  MTC1      S0, F2
  118:  NOP
  11C:  CVT.D.W   F2, F2
  120:  LW        V1, 0 (T0)
  124:  LAD       F0, $ConstDouble_80253038
  12C:  LI        S1, 1
  130:  SW        V0, 0 (T5)
  134:  COPY      V0, V1
  138:  ADDIU     V1, V1, 8
  13C:  SW        V1, 0 (T0)
  140:  SW        T3, 0 (V0)
  144:  SW        T2, 4 (V0)
  148:  ADDIU     V0, V1, 8
  14C:  SW        V0, 0 (T0)
  150:  LUI       V0, E700
  154:  MUL.D     F2, F2, F0
  158:  NOP
  15C:  SW        V0, 0 (V1)
  160:  LI        V0, 6
  164:  SW        R0, 4 (V1)
  168:  SW        V0, 10 (SP)
  16C:  SW        R0, 14 (SP)
  170:  SW        S1, 18 (SP)
  174:  SW        S0, 20 (SP)
  178:  TRUNC.W.D F4, F2
  17C:  SWC1      F4, 1C (SP)
  180:  JAL       ~Func:msg_draw_frame
  184:  LI        A3, 9B
  188:  LI        A0, 000B00FC
  190:  JAL       ~Func:get_string_width
  194:  CLEAR     A1
  198:  LI        A0, 000B00FC
  1A0:  LI        S3, CE
  1A4:  SUBU      A1, S3, V0
  1A8:  LI        A2, 32
  1AC:  COPY      A3, S0
  1B0:  SW        R0, 10 (SP)
  1B4:  JAL       ~Func:draw_string
  1B8:  SW        S1, 14 (SP)
  1BC:  LI        A1, D8
  1C0:  LI        A2, 33
  1C4:  LA        S2, 8010F290
  1CC:  COPY      A3, S1
  1D0:  LW        A0, 2B4 (S2)
  1D4:  LI        S4, 2
  1D8:  SW        R0, 10 (SP)
  1DC:  SW        S0, 14 (SP)
  1E0:  JAL       ~Func:draw_number
  1E4:  SW        S4, 18 (SP)
  1E8:  LI        A0, 000B00FD
  1F0:  JAL       ~Func:get_string_width
  1F4:  CLEAR     A1
  1F8:  LI        A0, 000B00FD
  200:  SUBU      A1, S3, V0
  204:  LI        A2, 41
  208:  COPY      A3, S0
  20C:  SW        R0, 10 (SP)
  210:  JAL       ~Func:draw_string
  214:  SW        S1, 14 (SP)
  218:  LI        A1, E7
  21C:  LI        A2, 42
  220:  COPY      A3, S1
  224:  LHU       A0, 24 (S6)
  228:  LI        S5, 3
  22C:  SW        R0, 10 (SP)
  230:  SW        S0, 14 (SP)
  234:  JAL       ~Func:draw_number
  238:  SW        S5, 18 (SP)
  23C:  LI        A0, 001F0034
  244:  LI        A1, E8
  248:  LI        A2, 3F
  24C:  COPY      A3, S0
  250:  SW        R0, 10 (SP)
  254:  JAL       ~Func:draw_string
  258:  SW        R0, 14 (SP)
  JAL $GetValidBadgeFlagsSize
  NOP
  ADDU a0, v0, r0 %new total badges possible
%   25C:  LI        A0, 50
  260:  LI        A1, F4
  264:  LI        A2, 42
  268:  COPY      A3, S1
  26C:  SW        R0, 10 (SP)
  270:  SW        S0, 14 (SP)
  274:  JAL       ~Func:draw_number
  278:  SW        S4, 18 (SP)
  27C:  LHU       V0, 32C (S2)
  280:  BNE       V0, R0, .o2AC
  284:  LUI       A0, B
  288:  ORI       A0, A0, FA
  28C:  LI        A1, 6D
  290:  LI        A2, 50
  294:  COPY      A3, S0
  298:  SW        R0, 10 (SP)
  29C:  JAL       ~Func:draw_string
  2A0:  SW        S1, 14 (SP)
  2A4:  BEQ       R0, R0, .o33C
  2A8:  LUI       A0, B
  .o2AC
  2AC:  ORI       A0, A0, FB
  2B0:  JAL       ~Func:get_string_width
  2B4:  CLEAR     A1
  2B8:  LI        A0, 000B00FB
  2C0:  SUBU      A1, S3, V0
  2C4:  LI        A2, 50
  2C8:  COPY      A3, S0
  2CC:  SW        R0, 10 (SP)
  2D0:  JAL       ~Func:draw_string
  2D4:  SW        S1, 14 (SP)
  2D8:  LI        A1, E7
  2DC:  LI        A2, 51
  2E0:  LHU       A0, 32C (S2)
  2E4:  LI        A3, 1
  2E8:  SW        R0, 10 (SP)
  2EC:  SW        S0, 14 (SP)
  2F0:  JAL       ~Func:draw_number
  2F4:  SW        S5, 18 (SP)
  2F8:  LI        A0, 001F0034
  300:  LI        A1, E8
  304:  LI        A2, 4E
  308:  COPY      A3, S0
  30C:  SW        R0, 10 (SP)
  310:  JAL       ~Func:draw_string
  314:  SW        R0, 14 (SP)
  318:  ADDIU     A0, R0, 134` %new star pieces total
  31C:  LI        A1, F4
  320:  LI        A2, 50
  324:  LI        A3, 1
  328:  SW        R0, 10 (SP)
  32C:  SW        S0, 14 (SP)
  330:  JAL       ~Func:draw_number
  334:  SW        S4, 18 (SP)
  338:  LUI        A0, 000B
  .o33C
  33C:  ADDIU a0, a0, 00FE
  340:  JAL       ~Func:get_string_width
  344:  CLEAR     A1
  348:  LH        A0, 26 (S6)
  34C:  BNE       A0, R0, .o380
  350:  COPY      V1, V0
  354:  LI        A0, 000B00FA
  35C:  LI        A1, 6E
  360:  LI        A2, 5F
  364:  COPY      A3, S0
  368:  LI        V0, 1
  36C:  SW        R0, 10 (SP)
  370:  JAL       ~Func:draw_string
  374:  SW        V0, 14 (SP)
  378:  BEQ       R0, R0, .o450
  37C:  NOP
  .o380
  380:  LI        V0, FFFF
  384:  BNE       A0, V0, .o3C4
  388:  LUI       A0, B
  38C:  ORI       A0, A0, FE
  390:  LI        A1, CE
  394:  SUBU      A1, A1, V1
  398:  LI        A2, 5F
  39C:  COPY      A3, S0
  3A0:  LI        V0, 1
  3A4:  SW        R0, 10 (SP)
  3A8:  JAL       ~Func:draw_string
  3AC:  SW        V0, 14 (SP)
  3B0:  CLEAR     A0
  3B4:  LI        A1, E7
  3B8:  LI        A2, 60
  3BC:  BEQ       R0, R0, .o3F8
  3C0:  LI        A3, 1
  .o3C4
  3C4:  ORI       A0, A0, FE
  3C8:  LI        A1, CE
  3CC:  SUBU      A1, A1, V1
  3D0:  LI        A2, 5F
  3D4:  COPY      A3, S0
  3D8:  LI        V0, 1
  3DC:  SW        R0, 10 (SP)
  3E0:  JAL       ~Func:draw_string
  3E4:  SW        V0, 14 (SP)
  3E8:  LI        A1, E7
  3EC:  LI        A2, 60
  3F0:  LI        A3, 1
  3F4:  LH        A0, 26 (S6)
  .o3F8
  3F8:  LI        V0, 3
  3FC:  SW        R0, 10 (SP)
  400:  SW        S0, 14 (SP)
  404:  JAL       ~Func:draw_number
  408:  SW        V0, 18 (SP)
  40C:  LI        A0, 001F0034
  414:  LI        A1, E8
  418:  LI        A2, 5D
  41C:  COPY      A3, S0
  420:  SW        R0, 10 (SP)
  424:  JAL       ~Func:draw_string
  428:  SW        R0, 14 (SP)
  42C:  LI        A1, F4
  430:  LI        A2, 5F
  434:  LI        A3, 1
  438:  ADDIU     A0, R0, 92` %new recipe total
  43C:  LI        V0, 2
  440:  SW        R0, 10 (SP)
  444:  SW        S0, 14 (SP)
  448:  JAL       ~Func:draw_number
  44C:  SW        V0, 18 (SP)
  .o450
  450:  LA        S1, 8010F290
  458:  LHU       V0, 2C0 (S1)
  45C:  BNE       V0, R0, .o48C
  460:  LUI       A0, B
  464:  ORI       A0, A0, FA
  468:  LI        A1, 6D
  46C:  LI        A2, 6E
  470:  COPY      A3, S0
  474:  LI        V0, 1
  478:  SW        R0, 10 (SP)
  47C:  JAL       ~Func:draw_string
  480:  SW        V0, 14 (SP)
  484:  BEQ       R0, R0, .o52C
  488:  LUI       A0, B
  .o48C
  48C:  ORI       A0, A0, FF
  490:  JAL       ~Func:get_string_width
  494:  CLEAR     A1
  498:  LI        A0, 000B00FF
  4A0:  LI        A1, CE
  4A4:  SUBU      A1, A1, V0
  4A8:  LI        A2, 6E
  4AC:  COPY      A3, S0
  4B0:  LI        V0, 1
  4B4:  SW        R0, 10 (SP)
  %4B8:  JAL       ~Func:draw_string
  4BC:  SW        V0, 14 (SP)
  4C0:  LI        A1, E7
  4C4:  LI        A2, 6F
  4C8:  LI        A3, 1
  4CC:  SW        R0, 10 (SP)
  4D0:  SW        S0, 14 (SP)
  4D4:  LHU       A0, 2C2 (S1)
  4D8:  LI        V0, 3
  %4DC:  JAL       ~Func:draw_number
  4E0:  SW        V0, 18 (SP)
  4E4:  LI        A0, 001F0034
  4EC:  LI        A1, E8
  4F0:  LI        A2, 6C
  4F4:  COPY      A3, S0
  4F8:  SW        R0, 10 (SP)
  %4FC:  JAL       ~Func:draw_string
  500:  SW        R0, 14 (SP)
  504:  LI        A1, F4
  508:  LI        A2, 6F
  50C:  LI        A3, 1
  510:  SW        R0, 10 (SP)
  514:  SW        S0, 14 (SP)
  518:  LHU       A0, 2C0 (S1)
  51C:  LI        V0, 2
  %520:  JAL       ~Func:draw_number
  524:  SW        V0, 18 (SP)
  528:  LI        A0, 000B
  .o52C
  52C:  ADDIU a0, a0, 00F4
  530:  JAL       ~Func:get_string_width
  534:  CLEAR     A1
  538:  LI        A0, 000B00F4
  540:  LI        S4, CE
  544:  SUBU      A1, S4, V0
  548:  LI        A2, 6D % number of battles
  54C:  COPY      A3, S0
  550:  LI        S2, 1
  554:  SW        R0, 10 (SP)
  558:  JAL       ~Func:draw_string
  55C:  SW        S2, 14 (SP)
  560:  LI        A1, D8
  564:  LI        A2, 6E % amount of battles
  568:  COPY      A3, S2
  56C:  LA        S1, 8010F290
  574:  SW        R0, 10 (SP)
  578:  SW        S0, 14 (SP)
  57C:  LHU       A0, 2A2 (S1)
  580:  LI        S3, 2
  584:  JAL       ~Func:draw_number
  588:  SW        S3, 18 (SP)
  58C:  LI        A0, 000B00F7
  594:  JAL       ~Func:get_string_width
  598:  CLEAR     A1
  59C:  LI        A0, 000B00F7
  5A4:  SUBU      A1, S4, V0
  5A8:  LI        A2, 7D % first strikes
  5AC:  COPY      A3, S0
  5B0:  SW        R0, 10 (SP)
  5B4:  JAL       ~Func:draw_string
  5B8:  SW        S2, 14 (SP)
  5BC:  LI        A1, D8
  5C0:  LI        A2, 7E % amount
  5C4:  LHU       A0, 29C (S1)
  5C8:  COPY      A3, S2
  5CC:  SW        R0, 10 (SP)
  5D0:  SW        S0, 14 (SP)
  5D4:  JAL       ~Func:draw_number
  5D8:  SW        S3, 18 (SP)
  5DC:  LI        A0, 000B00F8
  5E4:  JAL       ~Func:get_string_width
  5E8:  CLEAR     A1
  5EC:  LI        A0, 000B00F8
  5F4:  SUBU      A1, S4, V0
  5F8:  LI        A2, 8C % enemies first strikes
  5FC:  COPY      A3, S0
  600:  SW        R0, 10 (SP)
  604:  JAL       ~Func:draw_string
  608:  SW        S2, 14 (SP)
  60C:  LI        A1, D8
  610:  LI        A2, 8D % amount
  614:  LHU       A0, 29E (S1)
  618:  COPY      A3, S2
  61C:  SW        R0, 10 (SP)
  620:  SW        S0, 14 (SP)
  624:  JAL       ~Func:draw_number
  628:  SW        S3, 18 (SP)
  62C:  LHU       V0, 2A0 (S1)
  630:  BNE       V0, R0, .o65C
  634:  LUI       A0, B
  638:  ORI       A0, A0, FA
  63C:  LI        A1, 6D
  640:  LI        A2, 9D % ??? (total power bounces)
  644:  COPY      A3, S0
  648:  SW        R0, 10 (SP)
  64C:  JAL       ~Func:draw_string
  650:  SW        S2, 14 (SP)
  654:  BEQ       R0, R0, .o6A8
  658:  NOP
  .o65C
  65C:  ORI       A0, A0, F9
  660:  JAL       ~Func:get_string_width
  664:  CLEAR     A1
  668:  LI        A0, 000B00F9
  670:  SUBU      A1, S4, V0
  674:  LI        A2, 9D % total power bounces
  678:  COPY      A3, S0
  67C:  SW        R0, 10 (SP)
  680:  JAL       ~Func:draw_string
  684:  SW        S2, 14 (SP)
  688:  LI        A1, D8
  68C:  LI        A2, 9D % amount
  690:  LHU       A0, 2A0 (S1)
  694:  LI        A3, 1
  698:  SW        R0, 10 (SP)
  69C:  SW        S0, 14 (SP)
  6A0:  JAL       ~Func:draw_number
  6A4:  SW        S3, 18 (SP)
  .o6A8
  6A8:  LW        RA, 44 (SP)
  6AC:  LW        S6, 40 (SP)
  6B0:  LW        S5, 3C (SP)
  6B4:  LW        S4, 38 (SP)
  6B8:  LW        S3, 34 (SP)
  6BC:  LW        S2, 30 (SP)
  6C0:  LW        S1, 2C (SP)
  6C4:  LW        S0, 28 (SP)
  6C8:  JR        RA
  6CC:  ADDIU     SP, SP, 48
}

@ $DataTable_80252DC0
{
	*GF_MAC02_DiscoveredRecipeNEW_00 *GF_MAC02_DiscoveredRecipeNEW_01 *GF_MAC02_DiscoveredRecipeNEW_02 *GF_MAC02_DiscoveredRecipeNEW_03
	*GF_MAC02_DiscoveredRecipeNEW_04 *GF_MAC02_DiscoveredRecipeNEW_05 *GF_MAC02_DiscoveredRecipeNEW_06 *GF_MAC02_DiscoveredRecipeNEW_07
	*GF_MAC02_DiscoveredRecipeNEW_08 *GF_MAC02_DiscoveredRecipeNEW_09 *GF_MAC02_DiscoveredRecipeNEW_0A *GF_MAC02_DiscoveredRecipeNEW_0B
	*GF_MAC02_DiscoveredRecipeNEW_0C *GF_MAC02_DiscoveredRecipeNEW_0D *GF_MAC02_DiscoveredRecipeNEW_0E *GF_MAC02_DiscoveredRecipeNEW_0F
	*GF_MAC02_DiscoveredRecipeNEW_10 *GF_MAC02_DiscoveredRecipeNEW_11 *GF_MAC02_DiscoveredRecipeNEW_13 *GF_MAC02_DiscoveredRecipeNEW_14
	*GF_MAC02_DiscoveredRecipeNEW_15 *GF_MAC02_DiscoveredRecipeNEW_16 *GF_MAC02_DiscoveredRecipeNEW_17 *GF_MAC02_DiscoveredRecipeNEW_18
	*GF_MAC02_DiscoveredRecipeNEW_19 *GF_MAC02_DiscoveredRecipeNEW_1A *GF_MAC02_DiscoveredRecipeNEW_1B *GF_MAC02_DiscoveredRecipeNEW_1C
	*GF_MAC02_DiscoveredRecipeNEW_1D *GF_MAC02_DiscoveredRecipeNEW_1E *GF_MAC02_DiscoveredRecipeNEW_1F *GF_MAC02_DiscoveredRecipeNEW_20
	*GF_MAC02_DiscoveredRecipeNEW_21 *GF_MAC02_DiscoveredRecipeNEW_22 *GF_MAC02_DiscoveredRecipeNEW_23 *GF_MAC02_DiscoveredRecipeNEW_24
	*GF_MAC02_DiscoveredRecipeNEW_25 *GF_MAC02_DiscoveredRecipeNEW_26 *GF_MAC02_DiscoveredRecipeNEW_27 *GF_MAC02_DiscoveredRecipeNEW_28
	*GF_MAC02_DiscoveredRecipeNEW_29 *GF_MAC02_DiscoveredRecipeNEW_2A *GF_MAC02_DiscoveredRecipeNEW_2B *GF_MAC02_DiscoveredRecipeNEW_2C
	*GF_MAC02_DiscoveredRecipeNEW_2D *GF_MAC02_DiscoveredRecipeNEW_2F *GF_MAC02_DiscoveredRecipeNEW_30 *GF_MAC02_DiscoveredRecipeNEW_31
	*GF_MAC02_DiscoveredRecipeNEW_32 *GF_MAC02_DiscoveredRecipeNEW_33
    % NEW
    *GF_MAC02_DiscoveredRecipeNEW_34 *GF_MAC02_DiscoveredRecipeNEW_35 *GF_MAC02_DiscoveredRecipeNEW_36 *GF_MAC02_DiscoveredRecipeNEW_37 
    *GF_MAC02_DiscoveredRecipeNEW_38 *GF_MAC02_DiscoveredRecipeNEW_39 *GF_MAC02_DiscoveredRecipeNEW_3A *GF_MAC02_DiscoveredRecipeNEW_3B 
    *GF_MAC02_DiscoveredRecipeNEW_3C *GF_MAC02_DiscoveredRecipeNEW_3D *GF_MAC02_DiscoveredRecipeNEW_3E *GF_MAC02_DiscoveredRecipeNEW_3F 
    *GF_MAC02_DiscoveredRecipeNEW_40 *GF_MAC02_DiscoveredRecipeNEW_41 *GF_MAC02_DiscoveredRecipeNEW_42 *GF_MAC02_DiscoveredRecipeNEW_43
    *GF_MAC02_DiscoveredRecipeNEW_44 *GF_MAC02_DiscoveredRecipeNEW_45 *GF_MAC02_DiscoveredRecipeNEW_46 *GF_MAC02_DiscoveredRecipeNEW_47
    *GF_MAC02_DiscoveredRecipeNEW_48 *GF_MAC02_DiscoveredRecipeNEW_49 *GF_MAC02_DiscoveredRecipeNEW_4A *GF_MAC02_DiscoveredRecipeNEW_4B
    *GF_MAC02_DiscoveredRecipeNEW_4C *GF_MAC02_DiscoveredRecipeNEW_4D *GF_MAC02_DiscoveredRecipeNEW_4E *GF_MAC02_DiscoveredRecipeNEW_4F
    *GF_MAC02_DiscoveredRecipeNEW_50 *GF_MAC02_DiscoveredRecipeNEW_51 *GF_MAC02_DiscoveredRecipeNEW_52 *GF_MAC02_DiscoveredRecipeNEW_53
    *GF_MAC02_DiscoveredRecipeNEW_54 *GF_MAC02_DiscoveredRecipeNEW_55 *GF_MAC02_DiscoveredRecipeNEW_56 *GF_MAC02_DiscoveredRecipeNEW_57
    *GF_MAC02_DiscoveredRecipeNEW_58 *GF_MAC02_DiscoveredRecipeNEW_59 *GF_MAC02_DiscoveredRecipeNEW_5A *GF_MAC02_DiscoveredRecipeNEW_5B
    00000000
}
